<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile kind="Docker">ApiGateway/OcelotAPIGateway/OcelotAPIGateway.csproj</projectFile>
    <projectFile profileName="IIS Express">ApiGateway/OcelotAPIGateway/OcelotAPIGateway.csproj</projectFile>
    <projectFile kind="Docker">Microservices/AccountsMicroservice/Accounts.Presentation/Accounts.Presentation.csproj</projectFile>
    <projectFile profileName="IIS Express">Microservices/AccountsMicroservice/Accounts.Presentation/Accounts.Presentation.csproj</projectFile>
    <projectFile kind="Docker">Microservices/AuthMicroservice/Auth.API/Auth.API.csproj</projectFile>
    <projectFile profileName="IIS Express">Microservices/AuthMicroservice/Auth.API/Auth.API.csproj</projectFile>
    <projectFile kind="Docker">Microservices/OperationsMicroservice/Operations.API/Operations.API.csproj</projectFile>
    <projectFile profileName="IIS Express">Microservices/OperationsMicroservice/Operations.API/Operations.API.csproj</projectFile>
    <projectFile kind="DockerCompose">docker-compose.dcproj</projectFile>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="68c4b229-9323-42e3-ac6d-bbcff66e9ddb" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.BusinessLogic/Accounts.BusinessLogic.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.BusinessLogic/Accounts.BusinessLogic.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.BusinessLogic/Services/Implementations/FinancialAccountService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.BusinessLogic/Services/Implementations/FinancialAccountService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.BusinessLogic/Services/Interfaces/IFinancialAccountService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.BusinessLogic/Services/Interfaces/IFinancialAccountService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.Presentation/Controllers/FinancialAccountsController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.Presentation/Controllers/FinancialAccountsController.cs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 8
}]]></component>
  <component name="ProjectId" id="2gGxdEKOAGC0A8lGrIhCrBGYrqn" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "feature/add-report-generation",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Docker.Accounts.Presentation/Dockerfile">
    <configuration name="Accounts.Presentation: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Microservices/AccountsMicroservice/Accounts.Presentation/Accounts.Presentation.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Auth.API: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Microservices/AuthMicroservice/Auth.API/Auth.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="OcelotAPIGateway: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/ApiGateway/OcelotAPIGateway/OcelotAPIGateway.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Operations.API: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Microservices/OperationsMicroservice/Operations.API/Operations.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Accounts.Presentation/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="accounts.presentation" />
          <option name="contextFolderPath" value="D:\VS Projects\Modsen\Internship\PersonalFinanceManagementSystem\backend" />
          <option name="publishAllPorts" value="true" />
          <option name="sourceFilePath" value="Microservices/AccountsMicroservice/Accounts.Presentation/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="true" />
      <method v="2" />
    </configuration>
    <configuration name="Auth.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="auth.api" />
          <option name="contextFolderPath" value="D:\VS Projects\Modsen\Internship\PersonalFinanceManagementSystem\backend" />
          <option name="publishAllPorts" value="true" />
          <option name="sourceFilePath" value="Microservices/AuthMicroservice/Auth.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="true" />
      <method v="2" />
    </configuration>
    <configuration name="OcelotAPIGateway/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="ocelotapigateway" />
          <option name="contextFolderPath" value="D:\VS Projects\Modsen\Internship\PersonalFinanceManagementSystem\backend" />
          <option name="publishAllPorts" value="true" />
          <option name="sourceFilePath" value="ApiGateway/OcelotAPIGateway/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="true" />
      <method v="2" />
    </configuration>
    <configuration name="Operations.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="operations.api" />
          <option name="contextFolderPath" value="D:\VS Projects\Modsen\Internship\PersonalFinanceManagementSystem\backend" />
          <option name="publishAllPorts" value="true" />
          <option name="sourceFilePath" value="Microservices/OperationsMicroservice/Operations.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="true" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="secondarySourceFiles">
            <list>
              <option value="D:\VS Projects\Modsen\Internship\PersonalFinanceManagementSystem\backend\docker-compose.override.yml" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="68c4b229-9323-42e3-ac6d-bbcff66e9ddb" name="Changes" comment="" />
      <created>1715337828803</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1715337828803</updated>
      <workItem from="1715337846212" duration="70000" />
    </task>
    <servers />
  </component>
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
</project>