{
  "version": 3,
  "sources": ["../../../../../node_modules/@aspnet/signalr/dist/esm/Errors.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/ILogger.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/HttpClient.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/TextMessageFormat.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/Loggers.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/Utils.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/HandshakeProtocol.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/IHubProtocol.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/HubConnection.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/ITransport.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/AbortController.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/LongPollingTransport.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/ServerSentEventsTransport.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/WebSocketTransport.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/HttpConnection.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/JsonHubProtocol.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/HubConnectionBuilder.js", "../../../../../node_modules/@aspnet/signalr/dist/esm/index.js"],
  "sourcesContent": ["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/** Error thrown when an HTTP request fails. */\r\nvar HttpError = /** @class */ (function (_super) {\r\n    __extends(HttpError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    function HttpError(errorMessage, statusCode) {\r\n        var _newTarget = this.constructor;\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        _this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return HttpError;\r\n}(Error));\r\nexport { HttpError };\r\n/** Error thrown when a timeout elapses. */\r\nvar TimeoutError = /** @class */ (function (_super) {\r\n    __extends(TimeoutError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function TimeoutError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"A timeout occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return TimeoutError;\r\n}(Error));\r\nexport { TimeoutError };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\n/** Represents an HTTP response. */\r\nvar HttpResponse = /** @class */ (function () {\r\n    function HttpResponse(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n    return HttpResponse;\r\n}());\r\nexport { HttpResponse };\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient() {\r\n    }\r\n    HttpClient.prototype.get = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"GET\", url: url }));\r\n    };\r\n    HttpClient.prototype.post = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"POST\", url: url }));\r\n    };\r\n    HttpClient.prototype.delete = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"DELETE\", url: url }));\r\n    };\r\n    return HttpClient;\r\n}());\r\nexport { HttpClient };\r\n/** Default implementation of {@link @aspnet/signalr.HttpClient}. */\r\nvar DefaultHttpClient = /** @class */ (function (_super) {\r\n    __extends(DefaultHttpClient, _super);\r\n    /** Creates a new instance of the {@link @aspnet/signalr.DefaultHttpClient}, using the provided {@link @aspnet/signalr.ILogger} to log messages. */\r\n    function DefaultHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logger = logger;\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    DefaultHttpClient.prototype.send = function (request) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n            if (request.headers) {\r\n                Object.keys(request.headers)\r\n                    .forEach(function (header) { return xhr.setRequestHeader(header, request.headers[header]); });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = function () {\r\n                    xhr.abort();\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = function () {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + xhr.status + \": \" + xhr.statusText);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    };\r\n    return DefaultHttpClient;\r\n}(HttpClient));\r\nexport { DefaultHttpClient };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Not exported from index\r\n/** @private */\r\nvar TextMessageFormat = /** @class */ (function () {\r\n    function TextMessageFormat() {\r\n    }\r\n    TextMessageFormat.write = function (output) {\r\n        return \"\" + output + TextMessageFormat.RecordSeparator;\r\n    };\r\n    TextMessageFormat.parse = function (input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        var messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    };\r\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\r\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n    return TextMessageFormat;\r\n}());\r\nexport { TextMessageFormat };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nvar NullLogger = /** @class */ (function () {\r\n    function NullLogger() {\r\n    }\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    NullLogger.prototype.log = function (_logLevel, _message) {\r\n    };\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    NullLogger.instance = new NullLogger();\r\n    return NullLogger;\r\n}());\r\nexport { NullLogger };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n/** @private */\r\nvar Arg = /** @class */ (function () {\r\n    function Arg() {\r\n    }\r\n    Arg.isRequired = function (val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(\"The '\" + name + \"' argument is required.\");\r\n        }\r\n    };\r\n    Arg.isIn = function (val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\r\n        }\r\n    };\r\n    return Arg;\r\n}());\r\nexport { Arg };\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    var length = null;\r\n    if (isArrayBuffer(data)) {\r\n        length = \"Binary data of length \" + data.byteLength;\r\n        if (includeContent) {\r\n            length += \". Content: '\" + formatArrayBuffer(data) + \"'\";\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        length = \"String data of length \" + data.length;\r\n        if (includeContent) {\r\n            length += \". Content: '\" + data + \"'.\";\r\n        }\r\n    }\r\n    return length;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    var view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    var str = \"\";\r\n    view.forEach(function (num) {\r\n        var pad = num < 16 ? \"0\" : \"\";\r\n        str += \"0x\" + pad + num.toString(16) + \" \";\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n/** @private */\r\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, headers, token, response;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, accessTokenFactory()];\r\n                case 1:\r\n                    token = _b.sent();\r\n                    if (token) {\r\n                        headers = (_a = {},\r\n                            _a[\"Authorization\"] = \"Bearer \" + token,\r\n                            _a);\r\n                    }\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\r\n                    return [4 /*yield*/, httpClient.post(url, {\r\n                            content: content,\r\n                            headers: headers,\r\n                        })];\r\n                case 2:\r\n                    response = _b.sent();\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nvar Subject = /** @class */ (function () {\r\n    function Subject(cancelCallback) {\r\n        this.observers = [];\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    Subject.prototype.next = function (item) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            observer.next(item);\r\n        }\r\n    };\r\n    Subject.prototype.error = function (err) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.complete = function () {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.subscribe = function (observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    };\r\n    return Subject;\r\n}());\r\nexport { Subject };\r\n/** @private */\r\nvar SubjectSubscription = /** @class */ (function () {\r\n    function SubjectSubscription(subject, observer) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n    SubjectSubscription.prototype.dispose = function () {\r\n        var index = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n        if (this.subject.observers.length === 0) {\r\n            this.subject.cancelCallback().catch(function (_) { });\r\n        }\r\n    };\r\n    return SubjectSubscription;\r\n}());\r\nexport { SubjectSubscription };\r\n/** @private */\r\nvar ConsoleLogger = /** @class */ (function () {\r\n    function ConsoleLogger(minimumLogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n    }\r\n    ConsoleLogger.prototype.log = function (logLevel, message) {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    console.error(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    console.warn(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    console.info(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    console.log(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ConsoleLogger;\r\n}());\r\nexport { ConsoleLogger };\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nvar HandshakeProtocol = /** @class */ (function () {\r\n    function HandshakeProtocol() {\r\n    }\r\n    // Handshake request is always JSON\r\n    HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    };\r\n    HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\r\n        var responseMessage;\r\n        var messageData;\r\n        var remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            var binaryData = new Uint8Array(data);\r\n            var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            var textData = data;\r\n            var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        var messages = TextMessageFormat.parse(messageData);\r\n        responseMessage = JSON.parse(messages[0]);\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    };\r\n    return HandshakeProtocol;\r\n}());\r\nexport { HandshakeProtocol };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @aspnet/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @aspnet/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @aspnet/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @aspnet/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @aspnet/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @aspnet/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @aspnet/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Arg, Subject } from \"./Utils\";\r\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\n/** Represents a connection to a SignalR Hub. */\r\nvar HubConnection = /** @class */ (function () {\r\n    function HubConnection(connection, logger, protocol) {\r\n        var _this = this;\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = function (data) { return _this.processIncomingData(data); };\r\n        this.connection.onclose = function (error) { return _this.connectionClosed(error); };\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.id = 0;\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    HubConnection.create = function (connection, logger, protocol) {\r\n        return new HubConnection(connection, logger, protocol);\r\n    };\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.start = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var handshakeRequest;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        handshakeRequest = {\r\n                            protocol: this.protocol.name,\r\n                            version: this.protocol.version,\r\n                        };\r\n                        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n                        this.receivedHandshakeResponse = false;\r\n                        return [4 /*yield*/, this.connection.start(this.protocol.transferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n                        return [4 /*yield*/, this.connection.send(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\");\r\n                        // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n                        this.cleanupTimeout();\r\n                        this.configureTimeout();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.stop = function () {\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        this.cleanupTimeout();\r\n        return this.connection.stop();\r\n    };\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    HubConnection.prototype.stream = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createStreamInvocation(methodName, args);\r\n        var subject = new Subject(function () {\r\n            var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\r\n            var cancelMessage = _this.protocol.writeMessage(cancelInvocation);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n            return _this.connection.send(cancelMessage);\r\n        });\r\n        this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            if (invocationEvent.type === MessageType.Completion) {\r\n                if (invocationEvent.error) {\r\n                    subject.error(new Error(invocationEvent.error));\r\n                }\r\n                else {\r\n                    subject.complete();\r\n                }\r\n            }\r\n            else {\r\n                subject.next((invocationEvent.item));\r\n            }\r\n        };\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        this.connection.send(message)\r\n            .catch(function (e) {\r\n            subject.error(e);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        return subject;\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.send = function (methodName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, true);\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        return this.connection.send(message);\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    HubConnection.prototype.invoke = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, false);\r\n        var p = new Promise(function (resolve, reject) {\r\n            _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    var completionMessage = invocationEvent;\r\n                    if (completionMessage.error) {\r\n                        reject(new Error(completionMessage.error));\r\n                    }\r\n                    else {\r\n                        resolve(completionMessage.result);\r\n                    }\r\n                }\r\n                else {\r\n                    reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\r\n                }\r\n            };\r\n            var message = _this.protocol.writeMessage(invocationDescriptor);\r\n            _this.connection.send(message)\r\n                .catch(function (e) {\r\n                reject(e);\r\n                delete _this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n        });\r\n        return p;\r\n    };\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    HubConnection.prototype.on = function (methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this.methods[methodName].push(newMethod);\r\n    };\r\n    HubConnection.prototype.off = function (methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        var handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            var removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this.methods[methodName];\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    HubConnection.prototype.onclose = function (callback) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    };\r\n    HubConnection.prototype.processIncomingData = function (data) {\r\n        this.cleanupTimeout();\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            var messages = this.protocol.parseMessages(data, this.logger);\r\n            for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n                var message = messages_1[_i];\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        var callback = this.callbacks[message.invocationId];\r\n                        if (callback != null) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        // We don't want to wait on the stop itself.\r\n                        // tslint:disable-next-line:no-floating-promises\r\n                        this.connection.stop(message.error ? new Error(\"Server returned an error on close: \" + message.error) : null);\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.configureTimeout();\r\n    };\r\n    HubConnection.prototype.processHandshakeResponse = function (data) {\r\n        var _a;\r\n        var responseMessage;\r\n        var remainingData;\r\n        try {\r\n            _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\r\n        }\r\n        catch (e) {\r\n            var message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            var message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(new Error(message));\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        return remainingData;\r\n    };\r\n    HubConnection.prototype.configureTimeout = function () {\r\n        var _this = this;\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(function () { return _this.serverTimeout(); }, this.serverTimeoutInMilliseconds);\r\n        }\r\n    };\r\n    HubConnection.prototype.serverTimeout = function () {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    };\r\n    HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\r\n        var _this = this;\r\n        var methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            methods.forEach(function (m) { return m.apply(_this, invocationMessage.arguments); });\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                var message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n                // We don't need to wait on this Promise.\r\n                // tslint:disable-next-line:no-floating-promises\r\n                this.connection.stop(new Error(message));\r\n            }\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Warning, \"No client method with the name '\" + invocationMessage.target + \"' found.\");\r\n        }\r\n    };\r\n    HubConnection.prototype.connectionClosed = function (error) {\r\n        var _this = this;\r\n        var callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach(function (key) {\r\n            var callback = callbacks[key];\r\n            callback(undefined, error ? error : new Error(\"Invocation canceled due to connection being closed.\"));\r\n        });\r\n        this.cleanupTimeout();\r\n        this.closedCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n    };\r\n    HubConnection.prototype.cleanupTimeout = function () {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.createInvocation = function (methodName, args, nonblocking) {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n        else {\r\n            var id = this.id;\r\n            this.id++;\r\n            return {\r\n                arguments: args,\r\n                invocationId: id.toString(),\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    };\r\n    HubConnection.prototype.createStreamInvocation = function (methodName, args) {\r\n        var id = this.id;\r\n        this.id++;\r\n        return {\r\n            arguments: args,\r\n            invocationId: id.toString(),\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    };\r\n    HubConnection.prototype.createCancelInvocation = function (id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    };\r\n    return HubConnection;\r\n}());\r\nexport { HubConnection };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nvar AbortController = /** @class */ (function () {\r\n    function AbortController() {\r\n        this.isAborted = false;\r\n    }\r\n    AbortController.prototype.abort = function () {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AbortController.prototype, \"signal\", {\r\n        get: function () {\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbortController.prototype, \"aborted\", {\r\n        get: function () {\r\n            return this.isAborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbortController;\r\n}());\r\nexport { AbortController };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\nvar SHUTDOWN_TIMEOUT = 5 * 1000;\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nvar LongPollingTransport = /** @class */ (function () {\r\n    function LongPollingTransport(httpClient, accessTokenFactory, logger, logMessageContent, shutdownTimeout) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.shutdownTimeout = shutdownTimeout || SHUTDOWN_TIMEOUT;\r\n    }\r\n    Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\r\n        // This is an internal type, not exported from 'index' so this is really just internal.\r\n        get: function () {\r\n            return this.pollAbort.aborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LongPollingTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pollOptions, token, closeError, pollUrl, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.url = url;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting\");\r\n                        if (transferFormat === TransferFormat.Binary && (typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n                            // This will work if we fix: https://github.com/aspnet/SignalR/issues/742\r\n                            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n                        }\r\n                        pollOptions = {\r\n                            abortSignal: this.pollAbort.signal,\r\n                            headers: {},\r\n                            timeout: 90000,\r\n                        };\r\n                        if (transferFormat === TransferFormat.Binary) {\r\n                            pollOptions.responseType = \"arraybuffer\";\r\n                        }\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl);\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode);\r\n                            // Mark running as false so that the poll immediately ends and runs the close logic\r\n                            closeError = new HttpError(response.statusText, response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            this.running = true;\r\n                        }\r\n                        // tslint:disable-next-line:no-floating-promises\r\n                        this.poll(this.url, pollOptions, closeError);\r\n                        return [2 /*return*/, Promise.resolve()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = \"Bearer \" + token;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    };\r\n    LongPollingTransport.prototype.poll = function (url, pollOptions, closeError) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, pollUrl, response, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 8, 9]);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!this.running) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl);\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 4:\r\n                        response = _a.sent();\r\n                        if (response.statusCode === 204) {\r\n                            this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server\");\r\n                            this.running = false;\r\n                        }\r\n                        else if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode);\r\n                            // Unexpected status code\r\n                            closeError = new HttpError(response.statusText, response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            // Process the response\r\n                            if (response.content) {\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.content, this.logMessageContent));\r\n                                if (this.onreceive) {\r\n                                    this.onreceive(response.content);\r\n                                }\r\n                            }\r\n                            else {\r\n                                // This is another way timeout manifest.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (!this.running) {\r\n                            // Log but disregard errors that occur after we were stopped by DELETE\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            if (e_1 instanceof TimeoutError) {\r\n                                // Ignore timeouts and reissue the poll.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                            else {\r\n                                // Close the connection with the error as the result.\r\n                                closeError = e_1;\r\n                                this.running = false;\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [3 /*break*/, 1];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        // Indicate that we've stopped so the shutdown timer doesn't get registered.\r\n                        this.stopped = true;\r\n                        // Clean up the shutdown timer if it was registered\r\n                        if (this.shutdownTimer) {\r\n                            clearTimeout(this.shutdownTimer);\r\n                        }\r\n                        // Fire our onclosed event\r\n                        if (this.onclose) {\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Firing onclose event. Error: \" + (closeError || \"<undefined>\"));\r\n                            this.onclose(closeError);\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Transport finished.\");\r\n                        return [7 /*endfinally*/];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.running) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deleteOptions, token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 3, 4]);\r\n                        this.running = false;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\r\n                        deleteOptions = {\r\n                            headers: {},\r\n                        };\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(deleteOptions, token);\r\n                        return [4 /*yield*/, this.httpClient.delete(this.url, deleteOptions)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        // Abort the poll after the shutdown timeout if the server doesn't stop the poll.\r\n                        if (!this.stopped) {\r\n                            this.shutdownTimer = setTimeout(function () {\r\n                                _this.logger.log(LogLevel.Warning, \"(LongPolling transport) server did not terminate after DELETE request, canceling poll.\");\r\n                                // Abort any outstanding poll\r\n                                _this.pollAbort.abort();\r\n                            }, this.shutdownTimeout);\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return LongPollingTransport;\r\n}());\r\nexport { LongPollingTransport };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n/** @private */\r\nvar ServerSentEventsTransport = /** @class */ (function () {\r\n    function ServerSentEventsTransport(httpClient, accessTokenFactory, logger, logMessageContent) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n    }\r\n    ServerSentEventsTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        if (typeof (EventSource) === \"undefined\") {\r\n                            throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting\");\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        this.url = url;\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var opened = false;\r\n                                if (transferFormat !== TransferFormat.Text) {\r\n                                    reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                                }\r\n                                var eventSource = new EventSource(url, { withCredentials: true });\r\n                                try {\r\n                                    eventSource.onmessage = function (e) {\r\n                                        if (_this.onreceive) {\r\n                                            try {\r\n                                                _this.logger.log(LogLevel.Trace, \"(SSE transport) data received. \" + getDataDetail(e.data, _this.logMessageContent) + \".\");\r\n                                                _this.onreceive(e.data);\r\n                                            }\r\n                                            catch (error) {\r\n                                                if (_this.onclose) {\r\n                                                    _this.onclose(error);\r\n                                                }\r\n                                                return;\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    eventSource.onerror = function (e) {\r\n                                        var error = new Error(e.message || \"Error occurred\");\r\n                                        if (opened) {\r\n                                            _this.close(error);\r\n                                        }\r\n                                        else {\r\n                                            reject(error);\r\n                                        }\r\n                                    };\r\n                                    eventSource.onopen = function () {\r\n                                        _this.logger.log(LogLevel.Information, \"SSE connected to \" + _this.url);\r\n                                        _this.eventSource = eventSource;\r\n                                        opened = true;\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    return Promise.reject(e);\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.eventSource) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"SSE\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.stop = function () {\r\n        this.close();\r\n        return Promise.resolve();\r\n    };\r\n    ServerSentEventsTransport.prototype.close = function (e) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = null;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    };\r\n    return ServerSentEventsTransport;\r\n}());\r\nexport { ServerSentEventsTransport };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail } from \"./Utils\";\r\n/** @private */\r\nvar WebSocketTransport = /** @class */ (function () {\r\n    function WebSocketTransport(accessTokenFactory, logger, logMessageContent) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logMessageContent = logMessageContent;\r\n    }\r\n    WebSocketTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        if (typeof (WebSocket) === \"undefined\") {\r\n                            throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting\");\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                url = url.replace(/^http/, \"ws\");\r\n                                var webSocket = new WebSocket(url);\r\n                                if (transferFormat === TransferFormat.Binary) {\r\n                                    webSocket.binaryType = \"arraybuffer\";\r\n                                }\r\n                                // tslint:disable-next-line:variable-name\r\n                                webSocket.onopen = function (_event) {\r\n                                    _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url);\r\n                                    _this.webSocket = webSocket;\r\n                                    resolve();\r\n                                };\r\n                                webSocket.onerror = function (event) {\r\n                                    reject(event.error);\r\n                                };\r\n                                webSocket.onmessage = function (message) {\r\n                                    _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\r\n                                    if (_this.onreceive) {\r\n                                        _this.onreceive(message.data);\r\n                                    }\r\n                                };\r\n                                webSocket.onclose = function (event) {\r\n                                    // webSocket will be null if the transport did not start successfully\r\n                                    _this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n                                    if (_this.onclose) {\r\n                                        if (event.wasClean === false || event.code !== 1000) {\r\n                                            _this.onclose(new Error(\"Websocket closed with status code: \" + event.code + \" (\" + event.reason + \")\"));\r\n                                        }\r\n                                        else {\r\n                                            _this.onclose();\r\n                                        }\r\n                                    }\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebSocketTransport.prototype.send = function (data) {\r\n        if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\r\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    };\r\n    WebSocketTransport.prototype.stop = function () {\r\n        if (this.webSocket) {\r\n            this.webSocket.close();\r\n            this.webSocket = null;\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    return WebSocketTransport;\r\n}());\r\nexport { WebSocketTransport };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { DefaultHttpClient } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nvar MAX_REDIRECTS = 100;\r\n/** @private */\r\nvar HttpConnection = /** @class */ (function () {\r\n    function HttpConnection(url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.features = {};\r\n        Arg.isRequired(url, \"url\");\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n        options = options || {};\r\n        options.accessTokenFactory = options.accessTokenFactory || (function () { return null; });\r\n        options.logMessageContent = options.logMessageContent || false;\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = 2 /* Disconnected */;\r\n        this.options = options;\r\n    }\r\n    HttpConnection.prototype.start = function (transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\");\r\n        if (this.connectionState !== 2 /* Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start a connection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this.connectionState = 0 /* Connecting */;\r\n        this.startPromise = this.startInternal(transferFormat);\r\n        return this.startPromise;\r\n    };\r\n    HttpConnection.prototype.send = function (data) {\r\n        if (this.connectionState !== 1 /* Connected */) {\r\n            throw new Error(\"Cannot send data if the connection is not in the 'Connected' State.\");\r\n        }\r\n        return this.transport.send(data);\r\n    };\r\n    HttpConnection.prototype.stop = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!this.transport) return [3 /*break*/, 6];\r\n                        this.stopError = error;\r\n                        return [4 /*yield*/, this.transport.stop()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.transport = null;\r\n                        _a.label = 6;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.startInternal = function (transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, negotiateResponse, redirects, _loop_1, this_1, state_1, e_2;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.baseUrl;\r\n                        this.accessTokenFactory = this.options.accessTokenFactory;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 12, , 13]);\r\n                        if (!this.options.skipNegotiation) return [3 /*break*/, 5];\r\n                        if (!(this.options.transport === HttpTransportType.WebSockets)) return [3 /*break*/, 3];\r\n                        // No need to add a connection ID in this case\r\n                        this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        return [4 /*yield*/, this.transport.connect(url, transferFormat)];\r\n                    case 2:\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3: throw Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                    case 4: return [3 /*break*/, 11];\r\n                    case 5:\r\n                        negotiateResponse = null;\r\n                        redirects = 0;\r\n                        _loop_1 = function () {\r\n                            var accessToken_1;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this_1.getNegotiationResponse(url)];\r\n                                    case 1:\r\n                                        negotiateResponse = _a.sent();\r\n                                        // the user tries to stop the connection when it is being started\r\n                                        if (this_1.connectionState === 2 /* Disconnected */) {\r\n                                            return [2 /*return*/, { value: void 0 }];\r\n                                        }\r\n                                        if (negotiateResponse.url) {\r\n                                            url = negotiateResponse.url;\r\n                                        }\r\n                                        if (negotiateResponse.accessToken) {\r\n                                            accessToken_1 = negotiateResponse.accessToken;\r\n                                            this_1.accessTokenFactory = function () { return accessToken_1; };\r\n                                        }\r\n                                        redirects++;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        };\r\n                        this_1 = this;\r\n                        _a.label = 6;\r\n                    case 6: return [5 /*yield**/, _loop_1()];\r\n                    case 7:\r\n                        state_1 = _a.sent();\r\n                        if (typeof state_1 === \"object\")\r\n                            return [2 /*return*/, state_1.value];\r\n                        _a.label = 8;\r\n                    case 8:\r\n                        if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3 /*break*/, 6];\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                            throw Error(\"Negotiate redirection limit exceeded.\");\r\n                        }\r\n                        return [4 /*yield*/, this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\r\n                    case 10:\r\n                        _a.sent();\r\n                        _a.label = 11;\r\n                    case 11:\r\n                        if (this.transport instanceof LongPollingTransport) {\r\n                            this.features.inherentKeepAlive = true;\r\n                        }\r\n                        this.transport.onreceive = this.onreceive;\r\n                        this.transport.onclose = function (e) { return _this.stopConnection(e); };\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [3 /*break*/, 13];\r\n                    case 12:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e_2);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        this.transport = null;\r\n                        throw e_2;\r\n                    case 13: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.getNegotiationResponse = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, token, headers, negotiateUrl, response, e_3;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _b.sent();\r\n                        if (token) {\r\n                            headers = (_a = {},\r\n                                _a[\"Authorization\"] = \"Bearer \" + token,\r\n                                _a);\r\n                        }\r\n                        negotiateUrl = this.resolveNegotiateUrl(url);\r\n                        this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl);\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.httpClient.post(negotiateUrl, {\r\n                                content: \"\",\r\n                                headers: headers,\r\n                            })];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            throw Error(\"Unexpected status code returned from negotiate \" + response.statusCode);\r\n                        }\r\n                        return [2 /*return*/, JSON.parse(response.content)];\r\n                    case 4:\r\n                        e_3 = _b.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e_3);\r\n                        throw e_3;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\r\n    };\r\n    HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectUrl, transports, _i, transports_1, endpoint, transport, ex_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        if (!this.isITransport(requestedTransport)) return [3 /*break*/, 2];\r\n                        this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n                        this.transport = requestedTransport;\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        transports = negotiateResponse.availableTransports;\r\n                        _i = 0, transports_1 = transports;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(_i < transports_1.length)) return [3 /*break*/, 9];\r\n                        endpoint = transports_1[_i];\r\n                        this.connectionState = 0 /* Connecting */;\r\n                        transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\r\n                        if (!(typeof transport === \"number\")) return [3 /*break*/, 8];\r\n                        this.transport = this.constructTransport(transport);\r\n                        if (!(negotiateResponse.connectionId === null)) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.getNegotiationResponse(url)];\r\n                    case 4:\r\n                        negotiateResponse = _a.sent();\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 7:\r\n                        ex_1 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + HttpTransportType[transport] + \"': \" + ex_1);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        negotiateResponse.connectionId = null;\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        _i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 9: throw new Error(\"Unable to initialize any of the available transports.\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.constructTransport = function (transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                return new WebSocketTransport(this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            case HttpTransportType.ServerSentEvents:\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            default:\r\n                throw new Error(\"Unknown transport: \" + transport + \".\");\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveTransport = function (endpoint, requestedTransport, requestedTransferFormat) {\r\n        var transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\r\n        }\r\n        else {\r\n            var transferFormats = endpoint.transferFormats.map(function (s) { return TransferFormat[s]; });\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && typeof WebSocket === \"undefined\") ||\r\n                        (transport === HttpTransportType.ServerSentEvents && typeof EventSource === \"undefined\")) {\r\n                        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\r\n                    }\r\n                    else {\r\n                        this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'\");\r\n                        return transport;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    HttpConnection.prototype.isITransport = function (transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    };\r\n    HttpConnection.prototype.changeState = function (from, to) {\r\n        if (this.connectionState === from) {\r\n            this.connectionState = to;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    HttpConnection.prototype.stopConnection = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this.transport = null;\r\n                // If we have a stopError, it takes precedence over the error from the transport\r\n                error = this.stopError || error;\r\n                if (error) {\r\n                    this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n                }\r\n                this.connectionState = 2 /* Disconnected */;\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.resolveUrl = function (url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (typeof window === \"undefined\" || !window || !window.document) {\r\n            throw new Error(\"Cannot resolve '\" + url + \"'.\");\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        var aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this.logger.log(LogLevel.Information, \"Normalizing '\" + url + \"' to '\" + aTag.href + \"'.\");\r\n        return aTag.href;\r\n    };\r\n    HttpConnection.prototype.resolveNegotiateUrl = function (url) {\r\n        var index = url.indexOf(\"?\");\r\n        var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        return negotiateUrl;\r\n    };\r\n    return HttpConnection;\r\n}());\r\nexport { HttpConnection };\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nvar JsonHubProtocol = /** @class */ (function () {\r\n    function JsonHubProtocol() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    JsonHubProtocol.prototype.parseMessages = function (input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        var messages = TextMessageFormat.parse(input);\r\n        var hubMessages = [];\r\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n            var message = messages_1[_i];\r\n            var parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    };\r\n    /** Writes the specified {@link @aspnet/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    JsonHubProtocol.prototype.writeMessage = function (message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    };\r\n    JsonHubProtocol.prototype.isInvocationMessage = function (message) {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isCompletionMessage = function (message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    };\r\n    JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n    return JsonHubProtocol;\r\n}());\r\nexport { JsonHubProtocol };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n/** A builder for configuring {@link @aspnet/signalr.HubConnection} instances. */\r\nvar HubConnectionBuilder = /** @class */ (function () {\r\n    function HubConnectionBuilder() {\r\n    }\r\n    HubConnectionBuilder.prototype.configureLogging = function (logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = transportTypeOrOptions;\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @aspnet/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    };\r\n    /** Creates a {@link @aspnet/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @aspnet/signalr.HubConnection}.\r\n     */\r\n    HubConnectionBuilder.prototype.build = function () {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        var httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        var connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol());\r\n    };\r\n    return HubConnectionBuilder;\r\n}());\r\nexport { HubConnectionBuilder };\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport var VERSION = \"1.0.27\";\r\nexport { HttpError, TimeoutError } from \"./Errors\";\r\nexport { DefaultHttpClient, HttpClient, HttpResponse } from \"./HttpClient\";\r\nexport { HubConnection } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType } from \"./IHubProtocol\";\r\nexport { LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\n"],
  "mappings": ";;;AAEA,IAAI,YAAyC,WAAY;AACrD,MAAI,gBAAgB,OAAO,kBACtB,EAAE,WAAW,CAAC,EAAE,aAAa,SAAS,SAAU,GAAG,GAAG;AAAE,MAAE,YAAY;AAAA,EAAG,KAC1E,SAAU,GAAG,GAAG;AAAE,aAAS,KAAK;AAAG,UAAI,EAAE,eAAe,CAAC;AAAG,UAAE,CAAC,IAAI,EAAE,CAAC;AAAA,EAAG;AAC7E,SAAO,SAAU,GAAG,GAAG;AACnB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AAAE,WAAK,cAAc;AAAA,IAAG;AACtC,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACtF;AACJ,EAAG;AAEH,IAAI;AAAA;AAAA,EAA2B,SAAU,QAAQ;AAC7C,cAAUA,YAAW,MAAM;AAM3B,aAASA,WAAU,cAAc,YAAY;AACzC,UAAI,aAAa,KAAK;AACtB,UAAI,QAAQ;AACZ,UAAI,YAAY,WAAW;AAC3B,cAAQ,OAAO,KAAK,MAAM,YAAY,KAAK;AAC3C,YAAM,aAAa;AAGnB,YAAM,YAAY;AAClB,aAAO;AAAA,IACX;AACA,WAAOA;AAAA,EACX,EAAE,KAAK;AAAA;AAGP,IAAI;AAAA;AAAA,EAA8B,SAAU,QAAQ;AAChD,cAAUC,eAAc,MAAM;AAK9B,aAASA,cAAa,cAAc;AAChC,UAAI,aAAa,KAAK;AACtB,UAAI,iBAAiB,QAAQ;AAAE,uBAAe;AAAA,MAAuB;AACrE,UAAI,QAAQ;AACZ,UAAI,YAAY,WAAW;AAC3B,cAAQ,OAAO,KAAK,MAAM,YAAY,KAAK;AAG3C,YAAM,YAAY;AAClB,aAAO;AAAA,IACX;AACA,WAAOA;AAAA,EACX,EAAE,KAAK;AAAA;;;AC9CA,IAAI;AAAA,CACV,SAAUC,WAAU;AAEjB,EAAAA,UAASA,UAAS,OAAO,IAAI,CAAC,IAAI;AAElC,EAAAA,UAASA,UAAS,OAAO,IAAI,CAAC,IAAI;AAElC,EAAAA,UAASA,UAAS,aAAa,IAAI,CAAC,IAAI;AAExC,EAAAA,UAASA,UAAS,SAAS,IAAI,CAAC,IAAI;AAEpC,EAAAA,UAASA,UAAS,OAAO,IAAI,CAAC,IAAI;AAElC,EAAAA,UAASA,UAAS,UAAU,IAAI,CAAC,IAAI;AAErC,EAAAA,UAASA,UAAS,MAAM,IAAI,CAAC,IAAI;AACrC,GAAG,aAAa,WAAW,CAAC,EAAE;;;ACrB9B,IAAIC,aAAyC,WAAY;AACrD,MAAI,gBAAgB,OAAO,kBACtB,EAAE,WAAW,CAAC,EAAE,aAAa,SAAS,SAAU,GAAG,GAAG;AAAE,MAAE,YAAY;AAAA,EAAG,KAC1E,SAAU,GAAG,GAAG;AAAE,aAAS,KAAK;AAAG,UAAI,EAAE,eAAe,CAAC;AAAG,UAAE,CAAC,IAAI,EAAE,CAAC;AAAA,EAAG;AAC7E,SAAO,SAAU,GAAG,GAAG;AACnB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AAAE,WAAK,cAAc;AAAA,IAAG;AACtC,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACtF;AACJ,EAAG;AACH,IAAI,WAAsC,OAAO,UAAU,SAAS,GAAG;AACnE,WAAS,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,QAAI,UAAU,CAAC;AACf,aAAS,KAAK;AAAG,UAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC;AAC1D,UAAE,CAAC,IAAI,EAAE,CAAC;AAAA,EAClB;AACA,SAAO;AACX;AAIA,IAAI;AAAA;AAAA,EAA8B,2BAAY;AAC1C,aAASC,cAAa,YAAY,YAAY,SAAS;AACnD,WAAK,aAAa;AAClB,WAAK,aAAa;AAClB,WAAK,UAAU;AAAA,IACnB;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;AAMF,IAAI;AAAA;AAAA,EAA4B,WAAY;AACxC,aAASC,cAAa;AAAA,IACtB;AACA,IAAAA,YAAW,UAAU,MAAM,SAAU,KAAK,SAAS;AAC/C,aAAO,KAAK,KAAK,SAAS,CAAC,GAAG,SAAS,EAAE,QAAQ,OAAO,IAAS,CAAC,CAAC;AAAA,IACvE;AACA,IAAAA,YAAW,UAAU,OAAO,SAAU,KAAK,SAAS;AAChD,aAAO,KAAK,KAAK,SAAS,CAAC,GAAG,SAAS,EAAE,QAAQ,QAAQ,IAAS,CAAC,CAAC;AAAA,IACxE;AACA,IAAAA,YAAW,UAAU,SAAS,SAAU,KAAK,SAAS;AAClD,aAAO,KAAK,KAAK,SAAS,CAAC,GAAG,SAAS,EAAE,QAAQ,UAAU,IAAS,CAAC,CAAC;AAAA,IAC1E;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;AAGF,IAAI;AAAA;AAAA,EAAmC,SAAU,QAAQ;AACrD,IAAAC,WAAUC,oBAAmB,MAAM;AAEnC,aAASA,mBAAkB,QAAQ;AAC/B,UAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,YAAM,SAAS;AACf,aAAO;AAAA,IACX;AAEA,IAAAA,mBAAkB,UAAU,OAAO,SAAU,SAAS;AAClD,UAAI,QAAQ;AACZ,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC1C,YAAI,MAAM,IAAI,eAAe;AAC7B,YAAI,KAAK,QAAQ,QAAQ,QAAQ,KAAK,IAAI;AAC1C,YAAI,kBAAkB;AACtB,YAAI,iBAAiB,oBAAoB,gBAAgB;AAEzD,YAAI,iBAAiB,gBAAgB,0BAA0B;AAC/D,YAAI,QAAQ,SAAS;AACjB,iBAAO,KAAK,QAAQ,OAAO,EACtB,QAAQ,SAAU,QAAQ;AAAE,mBAAO,IAAI,iBAAiB,QAAQ,QAAQ,QAAQ,MAAM,CAAC;AAAA,UAAG,CAAC;AAAA,QACpG;AACA,YAAI,QAAQ,cAAc;AACtB,cAAI,eAAe,QAAQ;AAAA,QAC/B;AACA,YAAI,QAAQ,aAAa;AACrB,kBAAQ,YAAY,UAAU,WAAY;AACtC,gBAAI,MAAM;AAAA,UACd;AAAA,QACJ;AACA,YAAI,QAAQ,SAAS;AACjB,cAAI,UAAU,QAAQ;AAAA,QAC1B;AACA,YAAI,SAAS,WAAY;AACrB,cAAI,QAAQ,aAAa;AACrB,oBAAQ,YAAY,UAAU;AAAA,UAClC;AACA,cAAI,IAAI,UAAU,OAAO,IAAI,SAAS,KAAK;AACvC,oBAAQ,IAAI,aAAa,IAAI,QAAQ,IAAI,YAAY,IAAI,YAAY,IAAI,YAAY,CAAC;AAAA,UAC1F,OACK;AACD,mBAAO,IAAI,UAAU,IAAI,YAAY,IAAI,MAAM,CAAC;AAAA,UACpD;AAAA,QACJ;AACA,YAAI,UAAU,WAAY;AACtB,gBAAM,OAAO,IAAI,SAAS,SAAS,8BAA8B,IAAI,SAAS,OAAO,IAAI,UAAU;AACnG,iBAAO,IAAI,UAAU,IAAI,YAAY,IAAI,MAAM,CAAC;AAAA,QACpD;AACA,YAAI,YAAY,WAAY;AACxB,gBAAM,OAAO,IAAI,SAAS,SAAS,4BAA4B;AAC/D,iBAAO,IAAI,aAAa,CAAC;AAAA,QAC7B;AACA,YAAI,KAAK,QAAQ,WAAW,EAAE;AAAA,MAClC,CAAC;AAAA,IACL;AACA,WAAOA;AAAA,EACX,EAAE,UAAU;AAAA;;;ACxGZ,IAAI;AAAA;AAAA,EAAmC,WAAY;AAC/C,aAASC,qBAAoB;AAAA,IAC7B;AACA,IAAAA,mBAAkB,QAAQ,SAAU,QAAQ;AACxC,aAAO,KAAK,SAASA,mBAAkB;AAAA,IAC3C;AACA,IAAAA,mBAAkB,QAAQ,SAAU,OAAO;AACvC,UAAI,MAAM,MAAM,SAAS,CAAC,MAAMA,mBAAkB,iBAAiB;AAC/D,cAAM,IAAI,MAAM,wBAAwB;AAAA,MAC5C;AACA,UAAI,WAAW,MAAM,MAAMA,mBAAkB,eAAe;AAC5D,eAAS,IAAI;AACb,aAAO;AAAA,IACX;AACA,IAAAA,mBAAkB,sBAAsB;AACxC,IAAAA,mBAAkB,kBAAkB,OAAO,aAAaA,mBAAkB,mBAAmB;AAC7F,WAAOA;AAAA,EACX,EAAE;AAAA;;;AClBF,IAAI;AAAA;AAAA,EAA4B,WAAY;AACxC,aAASC,cAAa;AAAA,IACtB;AAGA,IAAAA,YAAW,UAAU,MAAM,SAAU,WAAW,UAAU;AAAA,IAC1D;AAEA,IAAAA,YAAW,WAAW,IAAIA,YAAW;AACrC,WAAOA;AAAA,EACX,EAAE;AAAA;;;ACXF,IAAI,YAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,IAAI,EAAE,SAAUC,UAAS;AAAE,QAAAA,SAAQ,OAAO,KAAK;AAAA,MAAG,CAAC,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC9I,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAI,cAA4C,SAAU,SAAS,MAAM;AACrE,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI;AAAG,YAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AAC/G,SAAO,IAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAM,IAAI;AACvJ,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAG;AAAA,EAAG;AACjE,WAAS,KAAK,IAAI;AACd,QAAI;AAAG,YAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO;AAAG,UAAI;AACV,YAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG;AAAM,iBAAO;AAC3J,YAAI,IAAI,GAAG;AAAG,eAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,gBAAQ,GAAG,CAAC,GAAG;AAAA,UACX,KAAK;AAAA,UAAG,KAAK;AAAG,gBAAI;AAAI;AAAA,UACxB,KAAK;AAAG,cAAE;AAAS,mBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,UACtD,KAAK;AAAG,cAAE;AAAS,gBAAI,GAAG,CAAC;AAAG,iBAAK,CAAC,CAAC;AAAG;AAAA,UACxC,KAAK;AAAG,iBAAK,EAAE,IAAI,IAAI;AAAG,cAAE,KAAK,IAAI;AAAG;AAAA,UACxC;AACI,gBAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,kBAAI;AAAG;AAAA,YAAU;AAC3G,gBAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,gBAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,YAAO;AACrF,gBAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,kBAAI;AAAI;AAAA,YAAO;AACpE,gBAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,gBAAE,IAAI,KAAK,EAAE;AAAG;AAAA,YAAO;AAClE,gBAAI,EAAE,CAAC;AAAG,gBAAE,IAAI,IAAI;AACpB,cAAE,KAAK,IAAI;AAAG;AAAA,QACtB;AACA,aAAK,KAAK,KAAK,SAAS,CAAC;AAAA,MAC7B,SAAS,GAAG;AAAE,aAAK,CAAC,GAAG,CAAC;AAAG,YAAI;AAAA,MAAG,UAAE;AAAU,YAAI,IAAI;AAAA,MAAG;AACzD,QAAI,GAAG,CAAC,IAAI;AAAG,YAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,EACnF;AACJ;AAIA,IAAI;AAAA;AAAA,EAAqB,WAAY;AACjC,aAASC,OAAM;AAAA,IACf;AACA,IAAAA,KAAI,aAAa,SAAU,KAAK,MAAM;AAClC,UAAI,QAAQ,QAAQ,QAAQ,QAAW;AACnC,cAAM,IAAI,MAAM,UAAU,OAAO,yBAAyB;AAAA,MAC9D;AAAA,IACJ;AACA,IAAAA,KAAI,OAAO,SAAU,KAAK,QAAQ,MAAM;AAEpC,UAAI,EAAE,OAAO,SAAS;AAClB,cAAM,IAAI,MAAM,aAAa,OAAO,aAAa,MAAM,GAAG;AAAA,MAC9D;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;AAGK,SAAS,cAAc,MAAM,gBAAgB;AAChD,MAAI,SAAS;AACb,MAAI,cAAc,IAAI,GAAG;AACrB,aAAS,2BAA2B,KAAK;AACzC,QAAI,gBAAgB;AAChB,gBAAU,iBAAiB,kBAAkB,IAAI,IAAI;AAAA,IACzD;AAAA,EACJ,WACS,OAAO,SAAS,UAAU;AAC/B,aAAS,2BAA2B,KAAK;AACzC,QAAI,gBAAgB;AAChB,gBAAU,iBAAiB,OAAO;AAAA,IACtC;AAAA,EACJ;AACA,SAAO;AACX;AAEO,SAAS,kBAAkB,MAAM;AACpC,MAAI,OAAO,IAAI,WAAW,IAAI;AAE9B,MAAI,MAAM;AACV,OAAK,QAAQ,SAAU,KAAK;AACxB,QAAI,MAAM,MAAM,KAAK,MAAM;AAC3B,WAAO,OAAO,MAAM,IAAI,SAAS,EAAE,IAAI;AAAA,EAC3C,CAAC;AAED,SAAO,IAAI,OAAO,GAAG,IAAI,SAAS,CAAC;AACvC;AAEO,SAAS,YAAY,QAAQ,eAAe,YAAY,KAAK,oBAAoB,SAAS,mBAAmB;AAChH,SAAO,UAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,QAAI,IAAI,SAAS,OAAO;AACxB,WAAO,YAAY,MAAM,SAAU,IAAI;AACnC,cAAQ,GAAG,OAAO;AAAA,QACd,KAAK;AAAG,iBAAO,CAAC,GAAa,mBAAmB,CAAC;AAAA,QACjD,KAAK;AACD,kBAAQ,GAAG,KAAK;AAChB,cAAI,OAAO;AACP,uBAAW,KAAK,CAAC,GACb,GAAG,eAAe,IAAI,YAAY,OAClC;AAAA,UACR;AACA,iBAAO,IAAI,SAAS,OAAO,MAAM,gBAAgB,+BAA+B,cAAc,SAAS,iBAAiB,IAAI,GAAG;AAC/H,iBAAO,CAAC,GAAa,WAAW,KAAK,KAAK;AAAA,YAClC;AAAA,YACA;AAAA,UACJ,CAAC,CAAC;AAAA,QACV,KAAK;AACD,qBAAW,GAAG,KAAK;AACnB,iBAAO,IAAI,SAAS,OAAO,MAAM,gBAAgB,oDAAoD,SAAS,aAAa,GAAG;AAC9H,iBAAO;AAAA,YAAC;AAAA;AAAA,UAAY;AAAA,MAC5B;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACL;AAEO,SAAS,aAAa,QAAQ;AACjC,MAAI,WAAW,QAAW;AACtB,WAAO,IAAI,cAAc,SAAS,WAAW;AAAA,EACjD;AACA,MAAI,WAAW,MAAM;AACjB,WAAO,WAAW;AAAA,EACtB;AACA,MAAI,OAAO,KAAK;AACZ,WAAO;AAAA,EACX;AACA,SAAO,IAAI,cAAc,MAAM;AACnC;AAEA,IAAI;AAAA;AAAA,EAAyB,WAAY;AACrC,aAASC,SAAQ,gBAAgB;AAC7B,WAAK,YAAY,CAAC;AAClB,WAAK,iBAAiB;AAAA,IAC1B;AACA,IAAAA,SAAQ,UAAU,OAAO,SAAU,MAAM;AACrC,eAAS,KAAK,GAAG,KAAK,KAAK,WAAW,KAAK,GAAG,QAAQ,MAAM;AACxD,YAAI,WAAW,GAAG,EAAE;AACpB,iBAAS,KAAK,IAAI;AAAA,MACtB;AAAA,IACJ;AACA,IAAAA,SAAQ,UAAU,QAAQ,SAAU,KAAK;AACrC,eAAS,KAAK,GAAG,KAAK,KAAK,WAAW,KAAK,GAAG,QAAQ,MAAM;AACxD,YAAI,WAAW,GAAG,EAAE;AACpB,YAAI,SAAS,OAAO;AAChB,mBAAS,MAAM,GAAG;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AACA,IAAAA,SAAQ,UAAU,WAAW,WAAY;AACrC,eAAS,KAAK,GAAG,KAAK,KAAK,WAAW,KAAK,GAAG,QAAQ,MAAM;AACxD,YAAI,WAAW,GAAG,EAAE;AACpB,YAAI,SAAS,UAAU;AACnB,mBAAS,SAAS;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AACA,IAAAA,SAAQ,UAAU,YAAY,SAAU,UAAU;AAC9C,WAAK,UAAU,KAAK,QAAQ;AAC5B,aAAO,IAAI,oBAAoB,MAAM,QAAQ;AAAA,IACjD;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;AAGF,IAAI;AAAA;AAAA,EAAqC,WAAY;AACjD,aAASC,qBAAoB,SAAS,UAAU;AAC5C,WAAK,UAAU;AACf,WAAK,WAAW;AAAA,IACpB;AACA,IAAAA,qBAAoB,UAAU,UAAU,WAAY;AAChD,UAAI,QAAQ,KAAK,QAAQ,UAAU,QAAQ,KAAK,QAAQ;AACxD,UAAI,QAAQ,IAAI;AACZ,aAAK,QAAQ,UAAU,OAAO,OAAO,CAAC;AAAA,MAC1C;AACA,UAAI,KAAK,QAAQ,UAAU,WAAW,GAAG;AACrC,aAAK,QAAQ,eAAe,EAAE,MAAM,SAAU,GAAG;AAAA,QAAE,CAAC;AAAA,MACxD;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;AAGF,IAAI;AAAA;AAAA,EAA+B,WAAY;AAC3C,aAASC,eAAc,iBAAiB;AACpC,WAAK,kBAAkB;AAAA,IAC3B;AACA,IAAAA,eAAc,UAAU,MAAM,SAAU,UAAU,SAAS;AACvD,UAAI,YAAY,KAAK,iBAAiB;AAClC,gBAAQ,UAAU;AAAA,UACd,KAAK,SAAS;AAAA,UACd,KAAK,SAAS;AACV,oBAAQ,MAAM,SAAS,QAAQ,IAAI,OAAO,OAAO;AACjD;AAAA,UACJ,KAAK,SAAS;AACV,oBAAQ,KAAK,SAAS,QAAQ,IAAI,OAAO,OAAO;AAChD;AAAA,UACJ,KAAK,SAAS;AACV,oBAAQ,KAAK,SAAS,QAAQ,IAAI,OAAO,OAAO;AAChD;AAAA,UACJ;AAEI,oBAAQ,IAAI,SAAS,QAAQ,IAAI,OAAO,OAAO;AAC/C;AAAA,QACR;AAAA,MACJ;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;AAGK,SAAS,cAAc,KAAK;AAC/B,SAAO,OAAO,OAAO,gBAAgB,gBAChC,eAAe;AAAA,EAEX,IAAI,eAAe,IAAI,YAAY,SAAS;AACzD;;;AChNA,IAAI;AAAA;AAAA,EAAmC,WAAY;AAC/C,aAASC,qBAAoB;AAAA,IAC7B;AAEA,IAAAA,mBAAkB,UAAU,wBAAwB,SAAU,kBAAkB;AAC5E,aAAO,kBAAkB,MAAM,KAAK,UAAU,gBAAgB,CAAC;AAAA,IACnE;AACA,IAAAA,mBAAkB,UAAU,yBAAyB,SAAU,MAAM;AACjE,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI,cAAc,IAAI,GAAG;AAErB,YAAI,aAAa,IAAI,WAAW,IAAI;AACpC,YAAI,iBAAiB,WAAW,QAAQ,kBAAkB,mBAAmB;AAC7E,YAAI,mBAAmB,IAAI;AACvB,gBAAM,IAAI,MAAM,wBAAwB;AAAA,QAC5C;AAGA,YAAI,iBAAiB,iBAAiB;AACtC,sBAAc,OAAO,aAAa,MAAM,MAAM,WAAW,MAAM,GAAG,cAAc,CAAC;AACjF,wBAAiB,WAAW,aAAa,iBAAkB,WAAW,MAAM,cAAc,EAAE,SAAS;AAAA,MACzG,OACK;AACD,YAAI,WAAW;AACf,YAAI,iBAAiB,SAAS,QAAQ,kBAAkB,eAAe;AACvE,YAAI,mBAAmB,IAAI;AACvB,gBAAM,IAAI,MAAM,wBAAwB;AAAA,QAC5C;AAGA,YAAI,iBAAiB,iBAAiB;AACtC,sBAAc,SAAS,UAAU,GAAG,cAAc;AAClD,wBAAiB,SAAS,SAAS,iBAAkB,SAAS,UAAU,cAAc,IAAI;AAAA,MAC9F;AAEA,UAAI,WAAW,kBAAkB,MAAM,WAAW;AAClD,wBAAkB,KAAK,MAAM,SAAS,CAAC,CAAC;AAGxC,aAAO,CAAC,eAAe,eAAe;AAAA,IAC1C;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;;;AC9CK,IAAI;AAAA,CACV,SAAUC,cAAa;AAEpB,EAAAA,aAAYA,aAAY,YAAY,IAAI,CAAC,IAAI;AAE7C,EAAAA,aAAYA,aAAY,YAAY,IAAI,CAAC,IAAI;AAE7C,EAAAA,aAAYA,aAAY,YAAY,IAAI,CAAC,IAAI;AAE7C,EAAAA,aAAYA,aAAY,kBAAkB,IAAI,CAAC,IAAI;AAEnD,EAAAA,aAAYA,aAAY,kBAAkB,IAAI,CAAC,IAAI;AAEnD,EAAAA,aAAYA,aAAY,MAAM,IAAI,CAAC,IAAI;AAEvC,EAAAA,aAAYA,aAAY,OAAO,IAAI,CAAC,IAAI;AAC5C,GAAG,gBAAgB,cAAc,CAAC,EAAE;;;ACjBpC,IAAIC,aAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,IAAI,EAAE,SAAUC,UAAS;AAAE,QAAAA,SAAQ,OAAO,KAAK;AAAA,MAAG,CAAC,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC9I,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAIC,eAA4C,SAAU,SAAS,MAAM;AACrE,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI;AAAG,YAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AAC/G,SAAO,IAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAM,IAAI;AACvJ,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAG;AAAA,EAAG;AACjE,WAAS,KAAK,IAAI;AACd,QAAI;AAAG,YAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO;AAAG,UAAI;AACV,YAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG;AAAM,iBAAO;AAC3J,YAAI,IAAI,GAAG;AAAG,eAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,gBAAQ,GAAG,CAAC,GAAG;AAAA,UACX,KAAK;AAAA,UAAG,KAAK;AAAG,gBAAI;AAAI;AAAA,UACxB,KAAK;AAAG,cAAE;AAAS,mBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,UACtD,KAAK;AAAG,cAAE;AAAS,gBAAI,GAAG,CAAC;AAAG,iBAAK,CAAC,CAAC;AAAG;AAAA,UACxC,KAAK;AAAG,iBAAK,EAAE,IAAI,IAAI;AAAG,cAAE,KAAK,IAAI;AAAG;AAAA,UACxC;AACI,gBAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,kBAAI;AAAG;AAAA,YAAU;AAC3G,gBAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,gBAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,YAAO;AACrF,gBAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,kBAAI;AAAI;AAAA,YAAO;AACpE,gBAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,gBAAE,IAAI,KAAK,EAAE;AAAG;AAAA,YAAO;AAClE,gBAAI,EAAE,CAAC;AAAG,gBAAE,IAAI,IAAI;AACpB,cAAE,KAAK,IAAI;AAAG;AAAA,QACtB;AACA,aAAK,KAAK,KAAK,SAAS,CAAC;AAAA,MAC7B,SAAS,GAAG;AAAE,aAAK,CAAC,GAAG,CAAC;AAAG,YAAI;AAAA,MAAG,UAAE;AAAU,YAAI,IAAI;AAAA,MAAG;AACzD,QAAI,GAAG,CAAC,IAAI;AAAG,YAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,EACnF;AACJ;AAKA,IAAI,wBAAwB,KAAK;AAEjC,IAAI;AAAA;AAAA,EAA+B,WAAY;AAC3C,aAASC,eAAc,YAAY,QAAQ,UAAU;AACjD,UAAI,QAAQ;AACZ,UAAI,WAAW,YAAY,YAAY;AACvC,UAAI,WAAW,QAAQ,QAAQ;AAC/B,UAAI,WAAW,UAAU,UAAU;AACnC,WAAK,8BAA8B;AACnC,WAAK,SAAS;AACd,WAAK,WAAW;AAChB,WAAK,aAAa;AAClB,WAAK,oBAAoB,IAAI,kBAAkB;AAC/C,WAAK,WAAW,YAAY,SAAU,MAAM;AAAE,eAAO,MAAM,oBAAoB,IAAI;AAAA,MAAG;AACtF,WAAK,WAAW,UAAU,SAAU,OAAO;AAAE,eAAO,MAAM,iBAAiB,KAAK;AAAA,MAAG;AACnF,WAAK,YAAY,CAAC;AAClB,WAAK,UAAU,CAAC;AAChB,WAAK,kBAAkB,CAAC;AACxB,WAAK,KAAK;AAAA,IACd;AAMA,IAAAA,eAAc,SAAS,SAAU,YAAY,QAAQ,UAAU;AAC3D,aAAO,IAAIA,eAAc,YAAY,QAAQ,QAAQ;AAAA,IACzD;AAKA,IAAAA,eAAc,UAAU,QAAQ,WAAY;AACxC,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI;AACJ,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,iCAAmB;AAAA,gBACf,UAAU,KAAK,SAAS;AAAA,gBACxB,SAAS,KAAK,SAAS;AAAA,cAC3B;AACA,mBAAK,OAAO,IAAI,SAAS,OAAO,yBAAyB;AACzD,mBAAK,4BAA4B;AACjC,qBAAO,CAAC,GAAa,KAAK,WAAW,MAAM,KAAK,SAAS,cAAc,CAAC;AAAA,YAC5E,KAAK;AACD,iBAAG,KAAK;AACR,mBAAK,OAAO,IAAI,SAAS,OAAO,4BAA4B;AAC5D,qBAAO,CAAC,GAAa,KAAK,WAAW,KAAK,KAAK,kBAAkB,sBAAsB,gBAAgB,CAAC,CAAC;AAAA,YAC7G,KAAK;AACD,iBAAG,KAAK;AACR,mBAAK,OAAO,IAAI,SAAS,aAAa,wBAAwB,KAAK,SAAS,OAAO,IAAI;AAEvF,mBAAK,eAAe;AACpB,mBAAK,iBAAiB;AACtB,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAY;AAAA,UAC5B;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAKA,IAAAC,eAAc,UAAU,OAAO,WAAY;AACvC,WAAK,OAAO,IAAI,SAAS,OAAO,yBAAyB;AACzD,WAAK,eAAe;AACpB,aAAO,KAAK,WAAW,KAAK;AAAA,IAChC;AAQA,IAAAA,eAAc,UAAU,SAAS,SAAU,YAAY;AACnD,UAAI,QAAQ;AACZ,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,KAAK,CAAC,IAAI,UAAU,EAAE;AAAA,MAC/B;AACA,UAAI,uBAAuB,KAAK,uBAAuB,YAAY,IAAI;AACvE,UAAI,UAAU,IAAI,QAAQ,WAAY;AAClC,YAAI,mBAAmB,MAAM,uBAAuB,qBAAqB,YAAY;AACrF,YAAI,gBAAgB,MAAM,SAAS,aAAa,gBAAgB;AAChE,eAAO,MAAM,UAAU,qBAAqB,YAAY;AACxD,eAAO,MAAM,WAAW,KAAK,aAAa;AAAA,MAC9C,CAAC;AACD,WAAK,UAAU,qBAAqB,YAAY,IAAI,SAAU,iBAAiB,OAAO;AAClF,YAAI,OAAO;AACP,kBAAQ,MAAM,KAAK;AACnB;AAAA,QACJ;AACA,YAAI,gBAAgB,SAAS,YAAY,YAAY;AACjD,cAAI,gBAAgB,OAAO;AACvB,oBAAQ,MAAM,IAAI,MAAM,gBAAgB,KAAK,CAAC;AAAA,UAClD,OACK;AACD,oBAAQ,SAAS;AAAA,UACrB;AAAA,QACJ,OACK;AACD,kBAAQ,KAAM,gBAAgB,IAAK;AAAA,QACvC;AAAA,MACJ;AACA,UAAI,UAAU,KAAK,SAAS,aAAa,oBAAoB;AAC7D,WAAK,WAAW,KAAK,OAAO,EACvB,MAAM,SAAU,GAAG;AACpB,gBAAQ,MAAM,CAAC;AACf,eAAO,MAAM,UAAU,qBAAqB,YAAY;AAAA,MAC5D,CAAC;AACD,aAAO;AAAA,IACX;AAUA,IAAAA,eAAc,UAAU,OAAO,SAAU,YAAY;AACjD,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,KAAK,CAAC,IAAI,UAAU,EAAE;AAAA,MAC/B;AACA,UAAI,uBAAuB,KAAK,iBAAiB,YAAY,MAAM,IAAI;AACvE,UAAI,UAAU,KAAK,SAAS,aAAa,oBAAoB;AAC7D,aAAO,KAAK,WAAW,KAAK,OAAO;AAAA,IACvC;AAYA,IAAAA,eAAc,UAAU,SAAS,SAAU,YAAY;AACnD,UAAI,QAAQ;AACZ,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,aAAK,KAAK,CAAC,IAAI,UAAU,EAAE;AAAA,MAC/B;AACA,UAAI,uBAAuB,KAAK,iBAAiB,YAAY,MAAM,KAAK;AACxE,UAAI,IAAI,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC3C,cAAM,UAAU,qBAAqB,YAAY,IAAI,SAAU,iBAAiB,OAAO;AACnF,cAAI,OAAO;AACP,mBAAO,KAAK;AACZ;AAAA,UACJ;AACA,cAAI,gBAAgB,SAAS,YAAY,YAAY;AACjD,gBAAI,oBAAoB;AACxB,gBAAI,kBAAkB,OAAO;AACzB,qBAAO,IAAI,MAAM,kBAAkB,KAAK,CAAC;AAAA,YAC7C,OACK;AACD,sBAAQ,kBAAkB,MAAM;AAAA,YACpC;AAAA,UACJ,OACK;AACD,mBAAO,IAAI,MAAM,8BAA8B,gBAAgB,IAAI,CAAC;AAAA,UACxE;AAAA,QACJ;AACA,YAAI,UAAU,MAAM,SAAS,aAAa,oBAAoB;AAC9D,cAAM,WAAW,KAAK,OAAO,EACxB,MAAM,SAAU,GAAG;AACpB,iBAAO,CAAC;AACR,iBAAO,MAAM,UAAU,qBAAqB,YAAY;AAAA,QAC5D,CAAC;AAAA,MACL,CAAC;AACD,aAAO;AAAA,IACX;AAMA,IAAAA,eAAc,UAAU,KAAK,SAAU,YAAY,WAAW;AAC1D,UAAI,CAAC,cAAc,CAAC,WAAW;AAC3B;AAAA,MACJ;AACA,mBAAa,WAAW,YAAY;AACpC,UAAI,CAAC,KAAK,QAAQ,UAAU,GAAG;AAC3B,aAAK,QAAQ,UAAU,IAAI,CAAC;AAAA,MAChC;AAEA,UAAI,KAAK,QAAQ,UAAU,EAAE,QAAQ,SAAS,MAAM,IAAI;AACpD;AAAA,MACJ;AACA,WAAK,QAAQ,UAAU,EAAE,KAAK,SAAS;AAAA,IAC3C;AACA,IAAAA,eAAc,UAAU,MAAM,SAAU,YAAY,QAAQ;AACxD,UAAI,CAAC,YAAY;AACb;AAAA,MACJ;AACA,mBAAa,WAAW,YAAY;AACpC,UAAI,WAAW,KAAK,QAAQ,UAAU;AACtC,UAAI,CAAC,UAAU;AACX;AAAA,MACJ;AACA,UAAI,QAAQ;AACR,YAAI,YAAY,SAAS,QAAQ,MAAM;AACvC,YAAI,cAAc,IAAI;AAClB,mBAAS,OAAO,WAAW,CAAC;AAC5B,cAAI,SAAS,WAAW,GAAG;AACvB,mBAAO,KAAK,QAAQ,UAAU;AAAA,UAClC;AAAA,QACJ;AAAA,MACJ,OACK;AACD,eAAO,KAAK,QAAQ,UAAU;AAAA,MAClC;AAAA,IACJ;AAKA,IAAAA,eAAc,UAAU,UAAU,SAAU,UAAU;AAClD,UAAI,UAAU;AACV,aAAK,gBAAgB,KAAK,QAAQ;AAAA,MACtC;AAAA,IACJ;AACA,IAAAA,eAAc,UAAU,sBAAsB,SAAU,MAAM;AAC1D,WAAK,eAAe;AACpB,UAAI,CAAC,KAAK,2BAA2B;AACjC,eAAO,KAAK,yBAAyB,IAAI;AACzC,aAAK,4BAA4B;AAAA,MACrC;AAEA,UAAI,MAAM;AAEN,YAAI,WAAW,KAAK,SAAS,cAAc,MAAM,KAAK,MAAM;AAC5D,iBAAS,KAAK,GAAG,aAAa,UAAU,KAAK,WAAW,QAAQ,MAAM;AAClE,cAAI,UAAU,WAAW,EAAE;AAC3B,kBAAQ,QAAQ,MAAM;AAAA,YAClB,KAAK,YAAY;AACb,mBAAK,mBAAmB,OAAO;AAC/B;AAAA,YACJ,KAAK,YAAY;AAAA,YACjB,KAAK,YAAY;AACb,kBAAI,WAAW,KAAK,UAAU,QAAQ,YAAY;AAClD,kBAAI,YAAY,MAAM;AAClB,oBAAI,QAAQ,SAAS,YAAY,YAAY;AACzC,yBAAO,KAAK,UAAU,QAAQ,YAAY;AAAA,gBAC9C;AACA,yBAAS,OAAO;AAAA,cACpB;AACA;AAAA,YACJ,KAAK,YAAY;AAEb;AAAA,YACJ,KAAK,YAAY;AACb,mBAAK,OAAO,IAAI,SAAS,aAAa,qCAAqC;AAG3E,mBAAK,WAAW,KAAK,QAAQ,QAAQ,IAAI,MAAM,wCAAwC,QAAQ,KAAK,IAAI,IAAI;AAC5G;AAAA,YACJ;AACI,mBAAK,OAAO,IAAI,SAAS,SAAS,2BAA2B,QAAQ,IAAI;AACzE;AAAA,UACR;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,iBAAiB;AAAA,IAC1B;AACA,IAAAA,eAAc,UAAU,2BAA2B,SAAU,MAAM;AAC/D,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACA,aAAK,KAAK,kBAAkB,uBAAuB,IAAI,GAAG,gBAAgB,GAAG,CAAC,GAAG,kBAAkB,GAAG,CAAC;AAAA,MAC3G,SACO,GAAG;AACN,YAAI,UAAU,uCAAuC;AACrD,aAAK,OAAO,IAAI,SAAS,OAAO,OAAO;AACvC,YAAI,QAAQ,IAAI,MAAM,OAAO;AAG7B,aAAK,WAAW,KAAK,KAAK;AAC1B,cAAM;AAAA,MACV;AACA,UAAI,gBAAgB,OAAO;AACvB,YAAI,UAAU,sCAAsC,gBAAgB;AACpE,aAAK,OAAO,IAAI,SAAS,OAAO,OAAO;AAGvC,aAAK,WAAW,KAAK,IAAI,MAAM,OAAO,CAAC;AAAA,MAC3C,OACK;AACD,aAAK,OAAO,IAAI,SAAS,OAAO,4BAA4B;AAAA,MAChE;AACA,aAAO;AAAA,IACX;AACA,IAAAA,eAAc,UAAU,mBAAmB,WAAY;AACnD,UAAI,QAAQ;AACZ,UAAI,CAAC,KAAK,WAAW,YAAY,CAAC,KAAK,WAAW,SAAS,mBAAmB;AAE1E,aAAK,gBAAgB,WAAW,WAAY;AAAE,iBAAO,MAAM,cAAc;AAAA,QAAG,GAAG,KAAK,2BAA2B;AAAA,MACnH;AAAA,IACJ;AACA,IAAAA,eAAc,UAAU,gBAAgB,WAAY;AAIhD,WAAK,WAAW,KAAK,IAAI,MAAM,qEAAqE,CAAC;AAAA,IACzG;AACA,IAAAA,eAAc,UAAU,qBAAqB,SAAU,mBAAmB;AACtE,UAAI,QAAQ;AACZ,UAAI,UAAU,KAAK,QAAQ,kBAAkB,OAAO,YAAY,CAAC;AACjE,UAAI,SAAS;AACT,gBAAQ,QAAQ,SAAU,GAAG;AAAE,iBAAO,EAAE,MAAM,OAAO,kBAAkB,SAAS;AAAA,QAAG,CAAC;AACpF,YAAI,kBAAkB,cAAc;AAEhC,cAAI,UAAU;AACd,eAAK,OAAO,IAAI,SAAS,OAAO,OAAO;AAGvC,eAAK,WAAW,KAAK,IAAI,MAAM,OAAO,CAAC;AAAA,QAC3C;AAAA,MACJ,OACK;AACD,aAAK,OAAO,IAAI,SAAS,SAAS,qCAAqC,kBAAkB,SAAS,UAAU;AAAA,MAChH;AAAA,IACJ;AACA,IAAAA,eAAc,UAAU,mBAAmB,SAAU,OAAO;AACxD,UAAI,QAAQ;AACZ,UAAI,YAAY,KAAK;AACrB,WAAK,YAAY,CAAC;AAClB,aAAO,KAAK,SAAS,EAChB,QAAQ,SAAU,KAAK;AACxB,YAAI,WAAW,UAAU,GAAG;AAC5B,iBAAS,QAAW,QAAQ,QAAQ,IAAI,MAAM,qDAAqD,CAAC;AAAA,MACxG,CAAC;AACD,WAAK,eAAe;AACpB,WAAK,gBAAgB,QAAQ,SAAU,GAAG;AAAE,eAAO,EAAE,MAAM,OAAO,CAAC,KAAK,CAAC;AAAA,MAAG,CAAC;AAAA,IACjF;AACA,IAAAA,eAAc,UAAU,iBAAiB,WAAY;AACjD,UAAI,KAAK,eAAe;AACpB,qBAAa,KAAK,aAAa;AAAA,MACnC;AAAA,IACJ;AACA,IAAAA,eAAc,UAAU,mBAAmB,SAAU,YAAY,MAAM,aAAa;AAChF,UAAI,aAAa;AACb,eAAO;AAAA,UACH,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,MAAM,YAAY;AAAA,QACtB;AAAA,MACJ,OACK;AACD,YAAI,KAAK,KAAK;AACd,aAAK;AACL,eAAO;AAAA,UACH,WAAW;AAAA,UACX,cAAc,GAAG,SAAS;AAAA,UAC1B,QAAQ;AAAA,UACR,MAAM,YAAY;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AACA,IAAAA,eAAc,UAAU,yBAAyB,SAAU,YAAY,MAAM;AACzE,UAAI,KAAK,KAAK;AACd,WAAK;AACL,aAAO;AAAA,QACH,WAAW;AAAA,QACX,cAAc,GAAG,SAAS;AAAA,QAC1B,QAAQ;AAAA,QACR,MAAM,YAAY;AAAA,MACtB;AAAA,IACJ;AACA,IAAAA,eAAc,UAAU,yBAAyB,SAAU,IAAI;AAC3D,aAAO;AAAA,QACH,cAAc;AAAA,QACd,MAAM,YAAY;AAAA,MACtB;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;;;ACpaK,IAAI;AAAA,CACV,SAAUC,oBAAmB;AAE1B,EAAAA,mBAAkBA,mBAAkB,MAAM,IAAI,CAAC,IAAI;AAEnD,EAAAA,mBAAkBA,mBAAkB,YAAY,IAAI,CAAC,IAAI;AAEzD,EAAAA,mBAAkBA,mBAAkB,kBAAkB,IAAI,CAAC,IAAI;AAE/D,EAAAA,mBAAkBA,mBAAkB,aAAa,IAAI,CAAC,IAAI;AAC9D,GAAG,sBAAsB,oBAAoB,CAAC,EAAE;AAEzC,IAAI;AAAA,CACV,SAAUC,iBAAgB;AAEvB,EAAAA,gBAAeA,gBAAe,MAAM,IAAI,CAAC,IAAI;AAE7C,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,CAAC,IAAI;AACnD,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;;;ACf1C,IAAI;AAAA;AAAA,EAAiC,WAAY;AAC7C,aAASC,mBAAkB;AACvB,WAAK,YAAY;AAAA,IACrB;AACA,IAAAA,iBAAgB,UAAU,QAAQ,WAAY;AAC1C,UAAI,CAAC,KAAK,WAAW;AACjB,aAAK,YAAY;AACjB,YAAI,KAAK,SAAS;AACd,eAAK,QAAQ;AAAA,QACjB;AAAA,MACJ;AAAA,IACJ;AACA,WAAO,eAAeA,iBAAgB,WAAW,UAAU;AAAA,MACvD,KAAK,WAAY;AACb,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,IAClB,CAAC;AACD,WAAO,eAAeA,iBAAgB,WAAW,WAAW;AAAA,MACxD,KAAK,WAAY;AACb,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,IAClB,CAAC;AACD,WAAOA;AAAA,EACX,EAAE;AAAA;;;AChCF,IAAIC,aAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,IAAI,EAAE,SAAUC,UAAS;AAAE,QAAAA,SAAQ,OAAO,KAAK;AAAA,MAAG,CAAC,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC9I,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAIC,eAA4C,SAAU,SAAS,MAAM;AACrE,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI;AAAG,YAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AAC/G,SAAO,IAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAM,IAAI;AACvJ,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAG;AAAA,EAAG;AACjE,WAAS,KAAK,IAAI;AACd,QAAI;AAAG,YAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO;AAAG,UAAI;AACV,YAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG;AAAM,iBAAO;AAC3J,YAAI,IAAI,GAAG;AAAG,eAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,gBAAQ,GAAG,CAAC,GAAG;AAAA,UACX,KAAK;AAAA,UAAG,KAAK;AAAG,gBAAI;AAAI;AAAA,UACxB,KAAK;AAAG,cAAE;AAAS,mBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,UACtD,KAAK;AAAG,cAAE;AAAS,gBAAI,GAAG,CAAC;AAAG,iBAAK,CAAC,CAAC;AAAG;AAAA,UACxC,KAAK;AAAG,iBAAK,EAAE,IAAI,IAAI;AAAG,cAAE,KAAK,IAAI;AAAG;AAAA,UACxC;AACI,gBAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,kBAAI;AAAG;AAAA,YAAU;AAC3G,gBAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,gBAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,YAAO;AACrF,gBAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,kBAAI;AAAI;AAAA,YAAO;AACpE,gBAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,gBAAE,IAAI,KAAK,EAAE;AAAG;AAAA,YAAO;AAClE,gBAAI,EAAE,CAAC;AAAG,gBAAE,IAAI,IAAI;AACpB,cAAE,KAAK,IAAI;AAAG;AAAA,QACtB;AACA,aAAK,KAAK,KAAK,SAAS,CAAC;AAAA,MAC7B,SAAS,GAAG;AAAE,aAAK,CAAC,GAAG,CAAC;AAAG,YAAI;AAAA,MAAG,UAAE;AAAU,YAAI,IAAI;AAAA,MAAG;AACzD,QAAI,GAAG,CAAC,IAAI;AAAG,YAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,EACnF;AACJ;AAMA,IAAI,mBAAmB,IAAI;AAG3B,IAAI;AAAA;AAAA,EAAsC,WAAY;AAClD,aAASC,sBAAqB,YAAY,oBAAoB,QAAQ,mBAAmB,iBAAiB;AACtG,WAAK,aAAa;AAClB,WAAK,qBAAqB,sBAAuB,WAAY;AAAE,eAAO;AAAA,MAAM;AAC5E,WAAK,SAAS;AACd,WAAK,YAAY,IAAI,gBAAgB;AACrC,WAAK,oBAAoB;AACzB,WAAK,kBAAkB,mBAAmB;AAAA,IAC9C;AACA,WAAO,eAAeA,sBAAqB,WAAW,eAAe;AAAA;AAAA,MAEjE,KAAK,WAAY;AACb,eAAO,KAAK,UAAU;AAAA,MAC1B;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,IAClB,CAAC;AACD,IAAAA,sBAAqB,UAAU,UAAU,SAAU,KAAK,gBAAgB;AACpE,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI,aAAa,OAAO,YAAY,SAAS;AAC7C,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,kBAAI,WAAW,KAAK,KAAK;AACzB,kBAAI,WAAW,gBAAgB,gBAAgB;AAC/C,kBAAI,KAAK,gBAAgB,gBAAgB,gBAAgB;AACzD,mBAAK,MAAM;AACX,mBAAK,OAAO,IAAI,SAAS,OAAO,oCAAoC;AACpE,kBAAI,mBAAmB,eAAe,UAAW,OAAO,IAAI,eAAe,EAAE,iBAAiB,UAAW;AAErG,sBAAM,IAAI,MAAM,4FAA4F;AAAA,cAChH;AACA,4BAAc;AAAA,gBACV,aAAa,KAAK,UAAU;AAAA,gBAC5B,SAAS,CAAC;AAAA,gBACV,SAAS;AAAA,cACb;AACA,kBAAI,mBAAmB,eAAe,QAAQ;AAC1C,4BAAY,eAAe;AAAA,cAC/B;AACA,qBAAO,CAAC,GAAa,KAAK,mBAAmB,CAAC;AAAA,YAClD,KAAK;AACD,sBAAQ,GAAG,KAAK;AAChB,mBAAK,kBAAkB,aAAa,KAAK;AACzC,wBAAU,MAAM,QAAQ,KAAK,IAAI;AACjC,mBAAK,OAAO,IAAI,SAAS,OAAO,sCAAsC,OAAO;AAC7E,qBAAO,CAAC,GAAa,KAAK,WAAW,IAAI,SAAS,WAAW,CAAC;AAAA,YAClE,KAAK;AACD,yBAAW,GAAG,KAAK;AACnB,kBAAI,SAAS,eAAe,KAAK;AAC7B,qBAAK,OAAO,IAAI,SAAS,OAAO,uDAAuD,SAAS,UAAU;AAE1G,6BAAa,IAAI,UAAU,SAAS,YAAY,SAAS,UAAU;AACnE,qBAAK,UAAU;AAAA,cACnB,OACK;AACD,qBAAK,UAAU;AAAA,cACnB;AAEA,mBAAK,KAAK,KAAK,KAAK,aAAa,UAAU;AAC3C,qBAAO,CAAC,GAAc,QAAQ,QAAQ,CAAC;AAAA,UAC/C;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,sBAAqB,UAAU,oBAAoB,SAAU,SAAS,OAAO;AACzE,UAAI,OAAO;AAEP,gBAAQ,QAAQ,eAAe,IAAI,YAAY;AAC/C;AAAA,MACJ;AAEA,UAAI,QAAQ,QAAQ,eAAe,GAAG;AAElC,eAAO,QAAQ,QAAQ,eAAe;AAAA,MAC1C;AAAA,IACJ;AACA,IAAAA,sBAAqB,UAAU,OAAO,SAAU,KAAK,aAAa,YAAY;AAC1E,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI,OAAO,SAAS,UAAU;AAC9B,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,iBAAG,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,kBAAI,CAAC,KAAK;AAAS,uBAAO,CAAC,GAAa,CAAC;AACzC,qBAAO,CAAC,GAAa,KAAK,mBAAmB,CAAC;AAAA,YAClD,KAAK;AACD,sBAAQ,GAAG,KAAK;AAChB,mBAAK,kBAAkB,aAAa,KAAK;AACzC,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,iBAAG,KAAK,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;AACxB,wBAAU,MAAM,QAAQ,KAAK,IAAI;AACjC,mBAAK,OAAO,IAAI,SAAS,OAAO,sCAAsC,OAAO;AAC7E,qBAAO,CAAC,GAAa,KAAK,WAAW,IAAI,SAAS,WAAW,CAAC;AAAA,YAClE,KAAK;AACD,yBAAW,GAAG,KAAK;AACnB,kBAAI,SAAS,eAAe,KAAK;AAC7B,qBAAK,OAAO,IAAI,SAAS,aAAa,mDAAmD;AACzF,qBAAK,UAAU;AAAA,cACnB,WACS,SAAS,eAAe,KAAK;AAClC,qBAAK,OAAO,IAAI,SAAS,OAAO,uDAAuD,SAAS,UAAU;AAE1G,6BAAa,IAAI,UAAU,SAAS,YAAY,SAAS,UAAU;AACnE,qBAAK,UAAU;AAAA,cACnB,OACK;AAED,oBAAI,SAAS,SAAS;AAClB,uBAAK,OAAO,IAAI,SAAS,OAAO,4CAA4C,cAAc,SAAS,SAAS,KAAK,iBAAiB,CAAC;AACnI,sBAAI,KAAK,WAAW;AAChB,yBAAK,UAAU,SAAS,OAAO;AAAA,kBACnC;AAAA,gBACJ,OACK;AAED,uBAAK,OAAO,IAAI,SAAS,OAAO,oDAAoD;AAAA,gBACxF;AAAA,cACJ;AACA,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC1B,KAAK;AACD,oBAAM,GAAG,KAAK;AACd,kBAAI,CAAC,KAAK,SAAS;AAEf,qBAAK,OAAO,IAAI,SAAS,OAAO,0DAA0D,IAAI,OAAO;AAAA,cACzG,OACK;AACD,oBAAI,eAAe,cAAc;AAE7B,uBAAK,OAAO,IAAI,SAAS,OAAO,oDAAoD;AAAA,gBACxF,OACK;AAED,+BAAa;AACb,uBAAK,UAAU;AAAA,gBACnB;AAAA,cACJ;AACA,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC1B,KAAK;AAAG,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC9B,KAAK;AAAG,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC9B,KAAK;AAED,mBAAK,UAAU;AAEf,kBAAI,KAAK,eAAe;AACpB,6BAAa,KAAK,aAAa;AAAA,cACnC;AAEA,kBAAI,KAAK,SAAS;AACd,qBAAK,OAAO,IAAI,SAAS,OAAO,2DAA2D,cAAc,cAAc;AACvH,qBAAK,QAAQ,UAAU;AAAA,cAC3B;AACA,mBAAK,OAAO,IAAI,SAAS,OAAO,6CAA6C;AAC7E,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAgB;AAAA,YAC5B,KAAK;AAAG,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAY;AAAA,UAChC;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,sBAAqB,UAAU,OAAO,SAAU,MAAM;AAClD,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,cAAI,CAAC,KAAK,SAAS;AACf,mBAAO,CAAC,GAAc,QAAQ,OAAO,IAAI,MAAM,8CAA8C,CAAC,CAAC;AAAA,UACnG;AACA,iBAAO,CAAC,GAAc,YAAY,KAAK,QAAQ,eAAe,KAAK,YAAY,KAAK,KAAK,KAAK,oBAAoB,MAAM,KAAK,iBAAiB,CAAC;AAAA,QACnJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,sBAAqB,UAAU,OAAO,WAAY;AAC9C,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI,eAAe;AACnB,YAAI,QAAQ;AACZ,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,iBAAG,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,mBAAK,UAAU;AACf,mBAAK,OAAO,IAAI,SAAS,OAAO,uDAAuD,KAAK,MAAM,GAAG;AACrG,8BAAgB;AAAA,gBACZ,SAAS,CAAC;AAAA,cACd;AACA,qBAAO,CAAC,GAAa,KAAK,mBAAmB,CAAC;AAAA,YAClD,KAAK;AACD,sBAAQ,GAAG,KAAK;AAChB,mBAAK,kBAAkB,eAAe,KAAK;AAC3C,qBAAO,CAAC,GAAa,KAAK,WAAW,OAAO,KAAK,KAAK,aAAa,CAAC;AAAA,YACxE,KAAK;AACD,iBAAG,KAAK;AACR,mBAAK,OAAO,IAAI,SAAS,OAAO,kDAAkD;AAClF,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC1B,KAAK;AAED,kBAAI,CAAC,KAAK,SAAS;AACf,qBAAK,gBAAgB,WAAW,WAAY;AACxC,wBAAM,OAAO,IAAI,SAAS,SAAS,wFAAwF;AAE3H,wBAAM,UAAU,MAAM;AAAA,gBAC1B,GAAG,KAAK,eAAe;AAAA,cAC3B;AACA,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAgB;AAAA,YAC5B,KAAK;AAAG,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAY;AAAA,UAChC;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,WAAOC;AAAA,EACX,EAAE;AAAA;;;AC7PF,IAAIC,aAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,IAAI,EAAE,SAAUC,UAAS;AAAE,QAAAA,SAAQ,OAAO,KAAK;AAAA,MAAG,CAAC,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC9I,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAIC,eAA4C,SAAU,SAAS,MAAM;AACrE,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI;AAAG,YAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AAC/G,SAAO,IAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAM,IAAI;AACvJ,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAG;AAAA,EAAG;AACjE,WAAS,KAAK,IAAI;AACd,QAAI;AAAG,YAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO;AAAG,UAAI;AACV,YAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG;AAAM,iBAAO;AAC3J,YAAI,IAAI,GAAG;AAAG,eAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,gBAAQ,GAAG,CAAC,GAAG;AAAA,UACX,KAAK;AAAA,UAAG,KAAK;AAAG,gBAAI;AAAI;AAAA,UACxB,KAAK;AAAG,cAAE;AAAS,mBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,UACtD,KAAK;AAAG,cAAE;AAAS,gBAAI,GAAG,CAAC;AAAG,iBAAK,CAAC,CAAC;AAAG;AAAA,UACxC,KAAK;AAAG,iBAAK,EAAE,IAAI,IAAI;AAAG,cAAE,KAAK,IAAI;AAAG;AAAA,UACxC;AACI,gBAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,kBAAI;AAAG;AAAA,YAAU;AAC3G,gBAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,gBAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,YAAO;AACrF,gBAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,kBAAI;AAAI;AAAA,YAAO;AACpE,gBAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,gBAAE,IAAI,KAAK,EAAE;AAAG;AAAA,YAAO;AAClE,gBAAI,EAAE,CAAC;AAAG,gBAAE,IAAI,IAAI;AACpB,cAAE,KAAK,IAAI;AAAG;AAAA,QACtB;AACA,aAAK,KAAK,KAAK,SAAS,CAAC;AAAA,MAC7B,SAAS,GAAG;AAAE,aAAK,CAAC,GAAG,CAAC;AAAG,YAAI;AAAA,MAAG,UAAE;AAAU,YAAI,IAAI;AAAA,MAAG;AACzD,QAAI,GAAG,CAAC,IAAI;AAAG,YAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,EACnF;AACJ;AAKA,IAAI;AAAA;AAAA,EAA2C,WAAY;AACvD,aAASC,2BAA0B,YAAY,oBAAoB,QAAQ,mBAAmB;AAC1F,WAAK,aAAa;AAClB,WAAK,qBAAqB,sBAAuB,WAAY;AAAE,eAAO;AAAA,MAAM;AAC5E,WAAK,SAAS;AACd,WAAK,oBAAoB;AAAA,IAC7B;AACA,IAAAA,2BAA0B,UAAU,UAAU,SAAU,KAAK,gBAAgB;AACzE,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI;AACJ,YAAI,QAAQ;AACZ,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,kBAAI,WAAW,KAAK,KAAK;AACzB,kBAAI,WAAW,gBAAgB,gBAAgB;AAC/C,kBAAI,KAAK,gBAAgB,gBAAgB,gBAAgB;AACzD,kBAAI,OAAQ,gBAAiB,aAAa;AACtC,sBAAM,IAAI,MAAM,qDAAqD;AAAA,cACzE;AACA,mBAAK,OAAO,IAAI,SAAS,OAAO,4BAA4B;AAC5D,qBAAO,CAAC,GAAa,KAAK,mBAAmB,CAAC;AAAA,YAClD,KAAK;AACD,sBAAQ,GAAG,KAAK;AAChB,kBAAI,OAAO;AACP,wBAAQ,IAAI,QAAQ,GAAG,IAAI,IAAI,MAAM,QAAQ,kBAAkB,mBAAmB,KAAK;AAAA,cAC3F;AACA,mBAAK,MAAM;AACX,qBAAO,CAAC,GAAc,IAAI,QAAQ,SAAU,SAAS,QAAQ;AACrD,oBAAI,SAAS;AACb,oBAAI,mBAAmB,eAAe,MAAM;AACxC,yBAAO,IAAI,MAAM,2EAA2E,CAAC;AAAA,gBACjG;AACA,oBAAI,cAAc,IAAI,YAAY,KAAK,EAAE,iBAAiB,KAAK,CAAC;AAChE,oBAAI;AACA,8BAAY,YAAY,SAAU,GAAG;AACjC,wBAAI,MAAM,WAAW;AACjB,0BAAI;AACA,8BAAM,OAAO,IAAI,SAAS,OAAO,oCAAoC,cAAc,EAAE,MAAM,MAAM,iBAAiB,IAAI,GAAG;AACzH,8BAAM,UAAU,EAAE,IAAI;AAAA,sBAC1B,SACO,OAAO;AACV,4BAAI,MAAM,SAAS;AACf,gCAAM,QAAQ,KAAK;AAAA,wBACvB;AACA;AAAA,sBACJ;AAAA,oBACJ;AAAA,kBACJ;AACA,8BAAY,UAAU,SAAU,GAAG;AAC/B,wBAAI,QAAQ,IAAI,MAAM,EAAE,WAAW,gBAAgB;AACnD,wBAAI,QAAQ;AACR,4BAAM,MAAM,KAAK;AAAA,oBACrB,OACK;AACD,6BAAO,KAAK;AAAA,oBAChB;AAAA,kBACJ;AACA,8BAAY,SAAS,WAAY;AAC7B,0BAAM,OAAO,IAAI,SAAS,aAAa,sBAAsB,MAAM,GAAG;AACtE,0BAAM,cAAc;AACpB,6BAAS;AACT,4BAAQ;AAAA,kBACZ;AAAA,gBACJ,SACO,GAAG;AACN,yBAAO,QAAQ,OAAO,CAAC;AAAA,gBAC3B;AAAA,cACJ,CAAC,CAAC;AAAA,UACd;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,2BAA0B,UAAU,OAAO,SAAU,MAAM;AACvD,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,cAAI,CAAC,KAAK,aAAa;AACnB,mBAAO,CAAC,GAAc,QAAQ,OAAO,IAAI,MAAM,8CAA8C,CAAC,CAAC;AAAA,UACnG;AACA,iBAAO,CAAC,GAAc,YAAY,KAAK,QAAQ,OAAO,KAAK,YAAY,KAAK,KAAK,KAAK,oBAAoB,MAAM,KAAK,iBAAiB,CAAC;AAAA,QAC3I,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,2BAA0B,UAAU,OAAO,WAAY;AACnD,WAAK,MAAM;AACX,aAAO,QAAQ,QAAQ;AAAA,IAC3B;AACA,IAAAA,2BAA0B,UAAU,QAAQ,SAAU,GAAG;AACrD,UAAI,KAAK,aAAa;AAClB,aAAK,YAAY,MAAM;AACvB,aAAK,cAAc;AACnB,YAAI,KAAK,SAAS;AACd,eAAK,QAAQ,CAAC;AAAA,QAClB;AAAA,MACJ;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;;;ACxIF,IAAIC,aAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,IAAI,EAAE,SAAUC,UAAS;AAAE,QAAAA,SAAQ,OAAO,KAAK;AAAA,MAAG,CAAC,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC9I,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAIC,eAA4C,SAAU,SAAS,MAAM;AACrE,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI;AAAG,YAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AAC/G,SAAO,IAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAM,IAAI;AACvJ,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAG;AAAA,EAAG;AACjE,WAAS,KAAK,IAAI;AACd,QAAI;AAAG,YAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO;AAAG,UAAI;AACV,YAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG;AAAM,iBAAO;AAC3J,YAAI,IAAI,GAAG;AAAG,eAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,gBAAQ,GAAG,CAAC,GAAG;AAAA,UACX,KAAK;AAAA,UAAG,KAAK;AAAG,gBAAI;AAAI;AAAA,UACxB,KAAK;AAAG,cAAE;AAAS,mBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,UACtD,KAAK;AAAG,cAAE;AAAS,gBAAI,GAAG,CAAC;AAAG,iBAAK,CAAC,CAAC;AAAG;AAAA,UACxC,KAAK;AAAG,iBAAK,EAAE,IAAI,IAAI;AAAG,cAAE,KAAK,IAAI;AAAG;AAAA,UACxC;AACI,gBAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,kBAAI;AAAG;AAAA,YAAU;AAC3G,gBAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,gBAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,YAAO;AACrF,gBAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,kBAAI;AAAI;AAAA,YAAO;AACpE,gBAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,gBAAE,IAAI,KAAK,EAAE;AAAG;AAAA,YAAO;AAClE,gBAAI,EAAE,CAAC;AAAG,gBAAE,IAAI,IAAI;AACpB,cAAE,KAAK,IAAI;AAAG;AAAA,QACtB;AACA,aAAK,KAAK,KAAK,SAAS,CAAC;AAAA,MAC7B,SAAS,GAAG;AAAE,aAAK,CAAC,GAAG,CAAC;AAAG,YAAI;AAAA,MAAG,UAAE;AAAU,YAAI,IAAI;AAAA,MAAG;AACzD,QAAI,GAAG,CAAC,IAAI;AAAG,YAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,EACnF;AACJ;AAKA,IAAI;AAAA;AAAA,EAAoC,WAAY;AAChD,aAASC,oBAAmB,oBAAoB,QAAQ,mBAAmB;AACvE,WAAK,SAAS;AACd,WAAK,qBAAqB,sBAAuB,WAAY;AAAE,eAAO;AAAA,MAAM;AAC5E,WAAK,oBAAoB;AAAA,IAC7B;AACA,IAAAA,oBAAmB,UAAU,UAAU,SAAU,KAAK,gBAAgB;AAClE,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI;AACJ,YAAI,QAAQ;AACZ,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,kBAAI,WAAW,KAAK,KAAK;AACzB,kBAAI,WAAW,gBAAgB,gBAAgB;AAC/C,kBAAI,KAAK,gBAAgB,gBAAgB,gBAAgB;AACzD,kBAAI,OAAQ,cAAe,aAAa;AACpC,sBAAM,IAAI,MAAM,mDAAmD;AAAA,cACvE;AACA,mBAAK,OAAO,IAAI,SAAS,OAAO,mCAAmC;AACnE,qBAAO,CAAC,GAAa,KAAK,mBAAmB,CAAC;AAAA,YAClD,KAAK;AACD,sBAAQ,GAAG,KAAK;AAChB,kBAAI,OAAO;AACP,wBAAQ,IAAI,QAAQ,GAAG,IAAI,IAAI,MAAM,QAAQ,kBAAkB,mBAAmB,KAAK;AAAA,cAC3F;AACA,qBAAO,CAAC,GAAc,IAAI,QAAQ,SAAU,SAAS,QAAQ;AACrD,sBAAM,IAAI,QAAQ,SAAS,IAAI;AAC/B,oBAAI,YAAY,IAAI,UAAU,GAAG;AACjC,oBAAI,mBAAmB,eAAe,QAAQ;AAC1C,4BAAU,aAAa;AAAA,gBAC3B;AAEA,0BAAU,SAAS,SAAU,QAAQ;AACjC,wBAAM,OAAO,IAAI,SAAS,aAAa,4BAA4B,GAAG;AACtE,wBAAM,YAAY;AAClB,0BAAQ;AAAA,gBACZ;AACA,0BAAU,UAAU,SAAU,OAAO;AACjC,yBAAO,MAAM,KAAK;AAAA,gBACtB;AACA,0BAAU,YAAY,SAAU,SAAS;AACrC,wBAAM,OAAO,IAAI,SAAS,OAAO,2CAA2C,cAAc,QAAQ,MAAM,MAAM,iBAAiB,IAAI,GAAG;AACtI,sBAAI,MAAM,WAAW;AACjB,0BAAM,UAAU,QAAQ,IAAI;AAAA,kBAChC;AAAA,gBACJ;AACA,0BAAU,UAAU,SAAU,OAAO;AAEjC,wBAAM,OAAO,IAAI,SAAS,OAAO,uCAAuC;AACxE,sBAAI,MAAM,SAAS;AACf,wBAAI,MAAM,aAAa,SAAS,MAAM,SAAS,KAAM;AACjD,4BAAM,QAAQ,IAAI,MAAM,wCAAwC,MAAM,OAAO,OAAO,MAAM,SAAS,GAAG,CAAC;AAAA,oBAC3G,OACK;AACD,4BAAM,QAAQ;AAAA,oBAClB;AAAA,kBACJ;AAAA,gBACJ;AAAA,cACJ,CAAC,CAAC;AAAA,UACd;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,oBAAmB,UAAU,OAAO,SAAU,MAAM;AAChD,UAAI,KAAK,aAAa,KAAK,UAAU,eAAe,UAAU,MAAM;AAChE,aAAK,OAAO,IAAI,SAAS,OAAO,0CAA0C,cAAc,MAAM,KAAK,iBAAiB,IAAI,GAAG;AAC3H,aAAK,UAAU,KAAK,IAAI;AACxB,eAAO,QAAQ,QAAQ;AAAA,MAC3B;AACA,aAAO,QAAQ,OAAO,oCAAoC;AAAA,IAC9D;AACA,IAAAA,oBAAmB,UAAU,OAAO,WAAY;AAC5C,UAAI,KAAK,WAAW;AAChB,aAAK,UAAU,MAAM;AACrB,aAAK,YAAY;AAAA,MACrB;AACA,aAAO,QAAQ,QAAQ;AAAA,IAC3B;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;;;ACvHF,IAAIC,aAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,IAAI,EAAE,SAAUC,UAAS;AAAE,QAAAA,SAAQ,OAAO,KAAK;AAAA,MAAG,CAAC,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC9I,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAIC,eAA4C,SAAU,SAAS,MAAM;AACrE,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI;AAAG,YAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AAC/G,SAAO,IAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAM,IAAI;AACvJ,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAG;AAAA,EAAG;AACjE,WAAS,KAAK,IAAI;AACd,QAAI;AAAG,YAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO;AAAG,UAAI;AACV,YAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG;AAAM,iBAAO;AAC3J,YAAI,IAAI,GAAG;AAAG,eAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,gBAAQ,GAAG,CAAC,GAAG;AAAA,UACX,KAAK;AAAA,UAAG,KAAK;AAAG,gBAAI;AAAI;AAAA,UACxB,KAAK;AAAG,cAAE;AAAS,mBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,UACtD,KAAK;AAAG,cAAE;AAAS,gBAAI,GAAG,CAAC;AAAG,iBAAK,CAAC,CAAC;AAAG;AAAA,UACxC,KAAK;AAAG,iBAAK,EAAE,IAAI,IAAI;AAAG,cAAE,KAAK,IAAI;AAAG;AAAA,UACxC;AACI,gBAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,kBAAI;AAAG;AAAA,YAAU;AAC3G,gBAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,gBAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,YAAO;AACrF,gBAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,kBAAI;AAAI;AAAA,YAAO;AACpE,gBAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,gBAAE,QAAQ,EAAE,CAAC;AAAG,gBAAE,IAAI,KAAK,EAAE;AAAG;AAAA,YAAO;AAClE,gBAAI,EAAE,CAAC;AAAG,gBAAE,IAAI,IAAI;AACpB,cAAE,KAAK,IAAI;AAAG;AAAA,QACtB;AACA,aAAK,KAAK,KAAK,SAAS,CAAC;AAAA,MAC7B,SAAS,GAAG;AAAE,aAAK,CAAC,GAAG,CAAC;AAAG,YAAI;AAAA,MAAG,UAAE;AAAU,YAAI,IAAI;AAAA,MAAG;AACzD,QAAI,GAAG,CAAC,IAAI;AAAG,YAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,EACnF;AACJ;AAQA,IAAI,gBAAgB;AAEpB,IAAI;AAAA;AAAA,EAAgC,WAAY;AAC5C,aAASC,gBAAe,KAAK,SAAS;AAClC,UAAI,YAAY,QAAQ;AAAE,kBAAU,CAAC;AAAA,MAAG;AACxC,WAAK,WAAW,CAAC;AACjB,UAAI,WAAW,KAAK,KAAK;AACzB,WAAK,SAAS,aAAa,QAAQ,MAAM;AACzC,WAAK,UAAU,KAAK,WAAW,GAAG;AAClC,gBAAU,WAAW,CAAC;AACtB,cAAQ,qBAAqB,QAAQ,sBAAuB,WAAY;AAAE,eAAO;AAAA,MAAM;AACvF,cAAQ,oBAAoB,QAAQ,qBAAqB;AACzD,WAAK,aAAa,QAAQ,cAAc,IAAI,kBAAkB,KAAK,MAAM;AACzE,WAAK,kBAAkB;AACvB,WAAK,UAAU;AAAA,IACnB;AACA,IAAAA,gBAAe,UAAU,QAAQ,SAAU,gBAAgB;AACvD,uBAAiB,kBAAkB,eAAe;AAClD,UAAI,KAAK,gBAAgB,gBAAgB,gBAAgB;AACzD,WAAK,OAAO,IAAI,SAAS,OAAO,+CAA+C,eAAe,cAAc,IAAI,IAAI;AACpH,UAAI,KAAK,oBAAoB,GAAsB;AAC/C,eAAO,QAAQ,OAAO,IAAI,MAAM,oEAAoE,CAAC;AAAA,MACzG;AACA,WAAK,kBAAkB;AACvB,WAAK,eAAe,KAAK,cAAc,cAAc;AACrD,aAAO,KAAK;AAAA,IAChB;AACA,IAAAA,gBAAe,UAAU,OAAO,SAAU,MAAM;AAC5C,UAAI,KAAK,oBAAoB,GAAmB;AAC5C,cAAM,IAAI,MAAM,qEAAqE;AAAA,MACzF;AACA,aAAO,KAAK,UAAU,KAAK,IAAI;AAAA,IACnC;AACA,IAAAA,gBAAe,UAAU,OAAO,SAAU,OAAO;AAC7C,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI;AACJ,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,mBAAK,kBAAkB;AACvB,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,iBAAG,KAAK,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;AACxB,qBAAO,CAAC,GAAa,KAAK,YAAY;AAAA,YAC1C,KAAK;AACD,iBAAG,KAAK;AACR,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC1B,KAAK;AACD,oBAAM,GAAG,KAAK;AACd,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC1B,KAAK;AACD,kBAAI,CAAC,KAAK;AAAW,uBAAO,CAAC,GAAa,CAAC;AAC3C,mBAAK,YAAY;AACjB,qBAAO,CAAC,GAAa,KAAK,UAAU,KAAK,CAAC;AAAA,YAC9C,KAAK;AACD,iBAAG,KAAK;AACR,mBAAK,YAAY;AACjB,iBAAG,QAAQ;AAAA,YACf,KAAK;AAAG,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAY;AAAA,UAChC;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,gBAAe,UAAU,gBAAgB,SAAU,gBAAgB;AAC/D,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI,KAAK,mBAAmB,WAAW,SAAS,QAAQ,SAAS;AACjE,YAAI,QAAQ;AACZ,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,oBAAM,KAAK;AACX,mBAAK,qBAAqB,KAAK,QAAQ;AACvC,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,iBAAG,KAAK,KAAK,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC;AAC1B,kBAAI,CAAC,KAAK,QAAQ;AAAiB,uBAAO,CAAC,GAAa,CAAC;AACzD,kBAAI,EAAE,KAAK,QAAQ,cAAc,kBAAkB;AAAa,uBAAO,CAAC,GAAa,CAAC;AAEtF,mBAAK,YAAY,KAAK,mBAAmB,kBAAkB,UAAU;AAGrE,qBAAO,CAAC,GAAa,KAAK,UAAU,QAAQ,KAAK,cAAc,CAAC;AAAA,YACpE,KAAK;AAGD,iBAAG,KAAK;AACR,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC1B,KAAK;AAAG,oBAAM,MAAM,8EAA8E;AAAA,YAClG,KAAK;AAAG,qBAAO,CAAC,GAAa,EAAE;AAAA,YAC/B,KAAK;AACD,kCAAoB;AACpB,0BAAY;AACZ,wBAAU,WAAY;AAClB,oBAAI;AACJ,uBAAOA,aAAY,MAAM,SAAUE,KAAI;AACnC,0BAAQA,IAAG,OAAO;AAAA,oBACd,KAAK;AAAG,6BAAO,CAAC,GAAa,OAAO,uBAAuB,GAAG,CAAC;AAAA,oBAC/D,KAAK;AACD,0CAAoBA,IAAG,KAAK;AAE5B,0BAAI,OAAO,oBAAoB,GAAsB;AACjD,+BAAO,CAAC,GAAc,EAAE,OAAO,OAAO,CAAC;AAAA,sBAC3C;AACA,0BAAI,kBAAkB,KAAK;AACvB,8BAAM,kBAAkB;AAAA,sBAC5B;AACA,0BAAI,kBAAkB,aAAa;AAC/B,wCAAgB,kBAAkB;AAClC,+BAAO,qBAAqB,WAAY;AAAE,iCAAO;AAAA,wBAAe;AAAA,sBACpE;AACA;AACA,6BAAO;AAAA,wBAAC;AAAA;AAAA,sBAAY;AAAA,kBAC5B;AAAA,gBACJ,CAAC;AAAA,cACL;AACA,uBAAS;AACT,iBAAG,QAAQ;AAAA,YACf,KAAK;AAAG,qBAAO,CAAC,GAAc,QAAQ,CAAC;AAAA,YACvC,KAAK;AACD,wBAAU,GAAG,KAAK;AAClB,kBAAI,OAAO,YAAY;AACnB,uBAAO,CAAC,GAAc,QAAQ,KAAK;AACvC,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,kBAAI,kBAAkB,OAAO,YAAY;AAAe,uBAAO,CAAC,GAAa,CAAC;AAC9E,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,kBAAI,cAAc,iBAAiB,kBAAkB,KAAK;AACtD,sBAAM,MAAM,uCAAuC;AAAA,cACvD;AACA,qBAAO,CAAC,GAAa,KAAK,gBAAgB,KAAK,KAAK,QAAQ,WAAW,mBAAmB,cAAc,CAAC;AAAA,YAC7G,KAAK;AACD,iBAAG,KAAK;AACR,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,kBAAI,KAAK,qBAAqB,sBAAsB;AAChD,qBAAK,SAAS,oBAAoB;AAAA,cACtC;AACA,mBAAK,UAAU,YAAY,KAAK;AAChC,mBAAK,UAAU,UAAU,SAAU,GAAG;AAAE,uBAAO,MAAM,eAAe,CAAC;AAAA,cAAG;AAGxE,mBAAK;AAAA,gBAAY;AAAA,gBAAoB;AAAA;AAAA,cAAiB;AACtD,qBAAO,CAAC,GAAa,EAAE;AAAA,YAC3B,KAAK;AACD,oBAAM,GAAG,KAAK;AACd,mBAAK,OAAO,IAAI,SAAS,OAAO,qCAAqC,GAAG;AACxE,mBAAK,kBAAkB;AACvB,mBAAK,YAAY;AACjB,oBAAM;AAAA,YACV,KAAK;AAAI,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAY;AAAA,UACjC;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAD,gBAAe,UAAU,yBAAyB,SAAU,KAAK;AAC7D,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI,IAAI,OAAO,SAAS,cAAc,UAAU;AAChD,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AAAG,qBAAO,CAAC,GAAa,KAAK,mBAAmB,CAAC;AAAA,YACtD,KAAK;AACD,sBAAQ,GAAG,KAAK;AAChB,kBAAI,OAAO;AACP,2BAAW,KAAK,CAAC,GACb,GAAG,eAAe,IAAI,YAAY,OAClC;AAAA,cACR;AACA,6BAAe,KAAK,oBAAoB,GAAG;AAC3C,mBAAK,OAAO,IAAI,SAAS,OAAO,kCAAkC,YAAY;AAC9E,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,iBAAG,KAAK,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;AACxB,qBAAO,CAAC,GAAa,KAAK,WAAW,KAAK,cAAc;AAAA,gBAChD,SAAS;AAAA,gBACT;AAAA,cACJ,CAAC,CAAC;AAAA,YACV,KAAK;AACD,yBAAW,GAAG,KAAK;AACnB,kBAAI,SAAS,eAAe,KAAK;AAC7B,sBAAM,MAAM,oDAAoD,SAAS,UAAU;AAAA,cACvF;AACA,qBAAO,CAAC,GAAc,KAAK,MAAM,SAAS,OAAO,CAAC;AAAA,YACtD,KAAK;AACD,oBAAM,GAAG,KAAK;AACd,mBAAK,OAAO,IAAI,SAAS,OAAO,qDAAqD,GAAG;AACxF,oBAAM;AAAA,YACV,KAAK;AAAG,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAY;AAAA,UAChC;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,gBAAe,UAAU,mBAAmB,SAAU,KAAK,cAAc;AACrE,aAAO,OAAO,IAAI,QAAQ,GAAG,MAAM,KAAK,MAAM,QAAQ,QAAQ;AAAA,IAClE;AACA,IAAAA,gBAAe,UAAU,kBAAkB,SAAU,KAAK,oBAAoB,mBAAmB,yBAAyB;AACtH,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,YAAI,YAAY,YAAY,IAAI,cAAc,UAAU,WAAW;AACnE,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,kBAAQ,GAAG,OAAO;AAAA,YACd,KAAK;AACD,2BAAa,KAAK,iBAAiB,KAAK,kBAAkB,YAAY;AACtE,kBAAI,CAAC,KAAK,aAAa,kBAAkB;AAAG,uBAAO,CAAC,GAAa,CAAC;AAClE,mBAAK,OAAO,IAAI,SAAS,OAAO,yEAAyE;AACzG,mBAAK,YAAY;AACjB,qBAAO,CAAC,GAAa,KAAK,UAAU,QAAQ,YAAY,uBAAuB,CAAC;AAAA,YACpF,KAAK;AACD,iBAAG,KAAK;AAGR,mBAAK;AAAA,gBAAY;AAAA,gBAAoB;AAAA;AAAA,cAAiB;AACtD,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAY;AAAA,YACxB,KAAK;AACD,2BAAa,kBAAkB;AAC/B,mBAAK,GAAG,eAAe;AACvB,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,kBAAI,EAAE,KAAK,aAAa;AAAS,uBAAO,CAAC,GAAa,CAAC;AACvD,yBAAW,aAAa,EAAE;AAC1B,mBAAK,kBAAkB;AACvB,0BAAY,KAAK,iBAAiB,UAAU,oBAAoB,uBAAuB;AACvF,kBAAI,EAAE,OAAO,cAAc;AAAW,uBAAO,CAAC,GAAa,CAAC;AAC5D,mBAAK,YAAY,KAAK,mBAAmB,SAAS;AAClD,kBAAI,EAAE,kBAAkB,iBAAiB;AAAO,uBAAO,CAAC,GAAa,CAAC;AACtE,qBAAO,CAAC,GAAa,KAAK,uBAAuB,GAAG,CAAC;AAAA,YACzD,KAAK;AACD,kCAAoB,GAAG,KAAK;AAC5B,2BAAa,KAAK,iBAAiB,KAAK,kBAAkB,YAAY;AACtE,iBAAG,QAAQ;AAAA,YACf,KAAK;AACD,iBAAG,KAAK,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;AACxB,qBAAO,CAAC,GAAa,KAAK,UAAU,QAAQ,YAAY,uBAAuB,CAAC;AAAA,YACpF,KAAK;AACD,iBAAG,KAAK;AACR,mBAAK;AAAA,gBAAY;AAAA,gBAAoB;AAAA;AAAA,cAAiB;AACtD,qBAAO;AAAA,gBAAC;AAAA;AAAA,cAAY;AAAA,YACxB,KAAK;AACD,qBAAO,GAAG,KAAK;AACf,mBAAK,OAAO,IAAI,SAAS,OAAO,oCAAoC,kBAAkB,SAAS,IAAI,QAAQ,IAAI;AAC/G,mBAAK,kBAAkB;AACvB,gCAAkB,eAAe;AACjC,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC1B,KAAK;AACD;AACA,qBAAO,CAAC,GAAa,CAAC;AAAA,YAC1B,KAAK;AAAG,oBAAM,IAAI,MAAM,uDAAuD;AAAA,UACnF;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,gBAAe,UAAU,qBAAqB,SAAU,WAAW;AAC/D,cAAQ,WAAW;AAAA,QACf,KAAK,kBAAkB;AACnB,iBAAO,IAAI,mBAAmB,KAAK,oBAAoB,KAAK,QAAQ,KAAK,QAAQ,iBAAiB;AAAA,QACtG,KAAK,kBAAkB;AACnB,iBAAO,IAAI,0BAA0B,KAAK,YAAY,KAAK,oBAAoB,KAAK,QAAQ,KAAK,QAAQ,iBAAiB;AAAA,QAC9H,KAAK,kBAAkB;AACnB,iBAAO,IAAI,qBAAqB,KAAK,YAAY,KAAK,oBAAoB,KAAK,QAAQ,KAAK,QAAQ,iBAAiB;AAAA,QACzH;AACI,gBAAM,IAAI,MAAM,wBAAwB,YAAY,GAAG;AAAA,MAC/D;AAAA,IACJ;AACA,IAAAA,gBAAe,UAAU,mBAAmB,SAAU,UAAU,oBAAoB,yBAAyB;AACzG,UAAI,YAAY,kBAAkB,SAAS,SAAS;AACpD,UAAI,cAAc,QAAQ,cAAc,QAAW;AAC/C,aAAK,OAAO,IAAI,SAAS,OAAO,yBAAyB,SAAS,YAAY,+CAA+C;AAAA,MACjI,OACK;AACD,YAAI,kBAAkB,SAAS,gBAAgB,IAAI,SAAU,GAAG;AAAE,iBAAO,eAAe,CAAC;AAAA,QAAG,CAAC;AAC7F,YAAI,iBAAiB,oBAAoB,SAAS,GAAG;AACjD,cAAI,gBAAgB,QAAQ,uBAAuB,KAAK,GAAG;AACvD,gBAAK,cAAc,kBAAkB,cAAc,OAAO,cAAc,eACnE,cAAc,kBAAkB,oBAAoB,OAAO,gBAAgB,aAAc;AAC1F,mBAAK,OAAO,IAAI,SAAS,OAAO,yBAAyB,kBAAkB,SAAS,IAAI,qDAAqD;AAAA,YACjJ,OACK;AACD,mBAAK,OAAO,IAAI,SAAS,OAAO,0BAA0B,kBAAkB,SAAS,IAAI,GAAG;AAC5F,qBAAO;AAAA,YACX;AAAA,UACJ,OACK;AACD,iBAAK,OAAO,IAAI,SAAS,OAAO,yBAAyB,kBAAkB,SAAS,IAAI,kEAAkE,eAAe,uBAAuB,IAAI,IAAI;AAAA,UAC5M;AAAA,QACJ,OACK;AACD,eAAK,OAAO,IAAI,SAAS,OAAO,yBAAyB,kBAAkB,SAAS,IAAI,0CAA0C;AAAA,QACtI;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,IAAAA,gBAAe,UAAU,eAAe,SAAU,WAAW;AACzD,aAAO,aAAa,OAAQ,cAAe,YAAY,aAAa;AAAA,IACxE;AACA,IAAAA,gBAAe,UAAU,cAAc,SAAU,MAAM,IAAI;AACvD,UAAI,KAAK,oBAAoB,MAAM;AAC/B,aAAK,kBAAkB;AACvB,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AACA,IAAAA,gBAAe,UAAU,iBAAiB,SAAU,OAAO;AACvD,aAAOH,WAAU,MAAM,QAAQ,QAAQ,WAAY;AAC/C,eAAOE,aAAY,MAAM,SAAU,IAAI;AACnC,eAAK,YAAY;AAEjB,kBAAQ,KAAK,aAAa;AAC1B,cAAI,OAAO;AACP,iBAAK,OAAO,IAAI,SAAS,OAAO,yCAAyC,QAAQ,IAAI;AAAA,UACzF,OACK;AACD,iBAAK,OAAO,IAAI,SAAS,aAAa,0BAA0B;AAAA,UACpE;AACA,eAAK,kBAAkB;AACvB,cAAI,KAAK,SAAS;AACd,iBAAK,QAAQ,KAAK;AAAA,UACtB;AACA,iBAAO;AAAA,YAAC;AAAA;AAAA,UAAY;AAAA,QACxB,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAAC,gBAAe,UAAU,aAAa,SAAU,KAAK;AAEjD,UAAI,IAAI,YAAY,YAAY,CAAC,MAAM,KAAK,IAAI,YAAY,WAAW,CAAC,MAAM,GAAG;AAC7E,eAAO;AAAA,MACX;AACA,UAAI,OAAO,WAAW,eAAe,CAAC,UAAU,CAAC,OAAO,UAAU;AAC9D,cAAM,IAAI,MAAM,qBAAqB,MAAM,IAAI;AAAA,MACnD;AAMA,UAAI,OAAO,OAAO,SAAS,cAAc,GAAG;AAC5C,WAAK,OAAO;AACZ,WAAK,OAAO,IAAI,SAAS,aAAa,kBAAkB,MAAM,WAAW,KAAK,OAAO,IAAI;AACzF,aAAO,KAAK;AAAA,IAChB;AACA,IAAAA,gBAAe,UAAU,sBAAsB,SAAU,KAAK;AAC1D,UAAI,QAAQ,IAAI,QAAQ,GAAG;AAC3B,UAAI,eAAe,IAAI,UAAU,GAAG,UAAU,KAAK,IAAI,SAAS,KAAK;AACrE,UAAI,aAAa,aAAa,SAAS,CAAC,MAAM,KAAK;AAC/C,wBAAgB;AAAA,MACpB;AACA,sBAAgB;AAChB,sBAAgB,UAAU,KAAK,KAAK,IAAI,UAAU,KAAK;AACvD,aAAO;AAAA,IACX;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;AAEF,SAAS,iBAAiB,oBAAoB,iBAAiB;AAC3D,SAAO,CAAC,uBAAwB,kBAAkB,wBAAwB;AAC9E;;;ACtYA,IAAI,yBAAyB;AAE7B,IAAI;AAAA;AAAA,EAAiC,WAAY;AAC7C,aAASE,mBAAkB;AAEvB,WAAK,OAAO;AAEZ,WAAK,UAAU;AAEf,WAAK,iBAAiB,eAAe;AAAA,IACzC;AAMA,IAAAA,iBAAgB,UAAU,gBAAgB,SAAU,OAAO,QAAQ;AAE/D,UAAI,OAAO,UAAU,UAAU;AAC3B,cAAM,IAAI,MAAM,yDAAyD;AAAA,MAC7E;AACA,UAAI,CAAC,OAAO;AACR,eAAO,CAAC;AAAA,MACZ;AACA,UAAI,WAAW,MAAM;AACjB,iBAAS,WAAW;AAAA,MACxB;AAEA,UAAI,WAAW,kBAAkB,MAAM,KAAK;AAC5C,UAAI,cAAc,CAAC;AACnB,eAAS,KAAK,GAAG,aAAa,UAAU,KAAK,WAAW,QAAQ,MAAM;AAClE,YAAI,UAAU,WAAW,EAAE;AAC3B,YAAI,gBAAgB,KAAK,MAAM,OAAO;AACtC,YAAI,OAAO,cAAc,SAAS,UAAU;AACxC,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACtC;AACA,gBAAQ,cAAc,MAAM;AAAA,UACxB,KAAK,YAAY;AACb,iBAAK,oBAAoB,aAAa;AACtC;AAAA,UACJ,KAAK,YAAY;AACb,iBAAK,oBAAoB,aAAa;AACtC;AAAA,UACJ,KAAK,YAAY;AACb,iBAAK,oBAAoB,aAAa;AACtC;AAAA,UACJ,KAAK,YAAY;AAEb;AAAA,UACJ,KAAK,YAAY;AAEb;AAAA,UACJ;AAEI,mBAAO,IAAI,SAAS,aAAa,2BAA2B,cAAc,OAAO,YAAY;AAC7F;AAAA,QACR;AACA,oBAAY,KAAK,aAAa;AAAA,MAClC;AACA,aAAO;AAAA,IACX;AAMA,IAAAA,iBAAgB,UAAU,eAAe,SAAU,SAAS;AACxD,aAAO,kBAAkB,MAAM,KAAK,UAAU,OAAO,CAAC;AAAA,IAC1D;AACA,IAAAA,iBAAgB,UAAU,sBAAsB,SAAU,SAAS;AAC/D,WAAK,qBAAqB,QAAQ,QAAQ,yCAAyC;AACnF,UAAI,QAAQ,iBAAiB,QAAW;AACpC,aAAK,qBAAqB,QAAQ,cAAc,yCAAyC;AAAA,MAC7F;AAAA,IACJ;AACA,IAAAA,iBAAgB,UAAU,sBAAsB,SAAU,SAAS;AAC/D,WAAK,qBAAqB,QAAQ,cAAc,yCAAyC;AACzF,UAAI,QAAQ,SAAS,QAAW;AAC5B,cAAM,IAAI,MAAM,yCAAyC;AAAA,MAC7D;AAAA,IACJ;AACA,IAAAA,iBAAgB,UAAU,sBAAsB,SAAU,SAAS;AAC/D,UAAI,QAAQ,UAAU,QAAQ,OAAO;AACjC,cAAM,IAAI,MAAM,yCAAyC;AAAA,MAC7D;AACA,UAAI,CAAC,QAAQ,UAAU,QAAQ,OAAO;AAClC,aAAK,qBAAqB,QAAQ,OAAO,yCAAyC;AAAA,MACtF;AACA,WAAK,qBAAqB,QAAQ,cAAc,yCAAyC;AAAA,IAC7F;AACA,IAAAA,iBAAgB,UAAU,uBAAuB,SAAU,OAAO,cAAc;AAC5E,UAAI,OAAO,UAAU,YAAY,UAAU,IAAI;AAC3C,cAAM,IAAI,MAAM,YAAY;AAAA,MAChC;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;;;AC/FF,IAAI;AAAA;AAAA,EAAsC,WAAY;AAClD,aAASC,wBAAuB;AAAA,IAChC;AACA,IAAAA,sBAAqB,UAAU,mBAAmB,SAAU,SAAS;AACjE,UAAI,WAAW,SAAS,SAAS;AACjC,UAAI,SAAS,OAAO,GAAG;AACnB,aAAK,SAAS;AAAA,MAClB,OACK;AACD,aAAK,SAAS,IAAI,cAAc,OAAO;AAAA,MAC3C;AACA,aAAO;AAAA,IACX;AACA,IAAAA,sBAAqB,UAAU,UAAU,SAAU,KAAK,wBAAwB;AAC5E,UAAI,WAAW,KAAK,KAAK;AACzB,WAAK,MAAM;AAGX,UAAI,OAAO,2BAA2B,UAAU;AAC5C,aAAK,wBAAwB;AAAA,MACjC,OACK;AACD,aAAK,wBAAwB;AAAA,UACzB,WAAW;AAAA,QACf;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAKA,IAAAA,sBAAqB,UAAU,kBAAkB,SAAU,UAAU;AACjE,UAAI,WAAW,UAAU,UAAU;AACnC,WAAK,WAAW;AAChB,aAAO;AAAA,IACX;AAKA,IAAAA,sBAAqB,UAAU,QAAQ,WAAY;AAG/C,UAAI,wBAAwB,KAAK,yBAAyB,CAAC;AAE3D,UAAI,sBAAsB,WAAW,QAAW;AAE5C,8BAAsB,SAAS,KAAK;AAAA,MACxC;AAEA,UAAI,CAAC,KAAK,KAAK;AACX,cAAM,IAAI,MAAM,0FAA0F;AAAA,MAC9G;AACA,UAAI,aAAa,IAAI,eAAe,KAAK,KAAK,qBAAqB;AACnE,aAAO,cAAc,OAAO,YAAY,KAAK,UAAU,WAAW,UAAU,KAAK,YAAY,IAAI,gBAAgB,CAAC;AAAA,IACtH;AACA,WAAOA;AAAA,EACX,EAAE;AAAA;AAEF,SAAS,SAAS,QAAQ;AACtB,SAAO,OAAO,QAAQ;AAC1B;;;AClEO,IAAI,UAAU;",
  "names": ["HttpError", "TimeoutError", "LogLevel", "__extends", "HttpResponse", "HttpClient", "__extends", "DefaultHttpClient", "TextMessageFormat", "NullLogger", "resolve", "Arg", "Subject", "SubjectSubscription", "ConsoleLogger", "HandshakeProtocol", "MessageType", "__awaiter", "resolve", "__generator", "HubConnection", "HttpTransportType", "TransferFormat", "AbortController", "__awaiter", "resolve", "__generator", "LongPollingTransport", "__awaiter", "resolve", "__generator", "ServerSentEventsTransport", "__awaiter", "resolve", "__generator", "WebSocketTransport", "__awaiter", "resolve", "__generator", "HttpConnection", "_a", "JsonHubProtocol", "HubConnectionBuilder"]
}
